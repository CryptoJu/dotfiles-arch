{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/ju/.vscode-oss/extensions/extensions.json","path":"/home/ju/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1671739714434,"profile":true,"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.74.2","productDate":"2022-12-21T11:41:53.444Z","productCommit":"e8a3071ea4344d9d48ef8a4df2c097372b0c5161","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"ms-toolsai.jupyter-keymap","uuid":"9f6dc8db-620c-4844-b8c5-e74914f1be27"},"manifest":{"name":"jupyter-keymap","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"displayName":"Jupyter Keymap","description":"Jupyter keymaps for notebooks","version":"1.0.0","engines":{"vscode":"^1.60.0-insider"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-keymap"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter-keymap/issues"},"categories":["Notebooks"],"keywords":["notebook-keymap"],"contributes":{"keybindings":[{"key":"F","when":"notebookEditorFocused && !inputFocus","command":"notebook.find"},{"key":"K","when":"notebookEditorFocused && !inputFocus","command":"list.focusUp"},{"key":"J","when":"notebookEditorFocused && !inputFocus","command":"list.focusDown"},{"key":"A","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.insertCodeCellAboveAndFocusContainer"},{"key":"B","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.insertCodeCellBelowAndFocusContainer"},{"key":"D D","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.delete"},{"key":"Z","when":"notebookEditorFocused && !inputFocus","command":"undo"},{"key":"S","when":"notebookEditorFocused && !inputFocus","command":"workbench.action.files.save"},{"key":"C","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.copy"},{"key":"X","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.cut"},{"key":"V","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.paste"},{"key":"shift+L","when":"notebookEditorFocused && !inputFocus","command":"notebook.toggleLineNumbers"},{"key":"O","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.toggleOutputs"},{"key":"L","when":"notebookEditorFocused && !inputFocus","command":"notebook.cell.toggleLineNumbers"},{"key":"ctrl+shift+-","when":"editorTextFocus && inputFocus && notebookEditorFocused","command":"notebook.cell.split"},{"key":"ctrl+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused || notebookCellListFocused","command":"notebook.cell.executeAndFocusContainer"},{"key":"shift+enter","when":"editorTextFocus && inputFocus && notebookEditorFocused || notebookCellListFocused && notebookCellType == 'code'","command":"notebook.cell.executeAndSelectBelow"}]}},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/ms-toolsai.jupyter-keymap-1.0.0-universal","path":"/home/ju/.vscode-oss/extensions/ms-toolsai.jupyter-keymap-1.0.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"9f6dc8db-620c-4844-b8c5-e74914f1be27","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"ms-toolsai","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739695388,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.vscode-jupyter-slideshow","uuid":"e153ca70-b543-4865-b4c5-b31d34185948"},"manifest":{"name":"vscode-jupyter-slideshow","displayName":"Jupyter Slide Show","description":"Jupyter Slide Show support for VS Code","version":"0.1.5","publisher":"ms-toolsai","preview":true,"icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"author":{"name":"Microsoft Corporation"},"engines":{"vscode":"^1.71.0"},"categories":["Notebooks"],"activationEvents":["onNotebook:jupyter-notebook","onCommand:jupyter-slideshow.switchSlideType","onCommand:jupyter-slideshow.editSlideShowInJSON","onCommand:jupyter-slideshow.switchSlideType","onCommand:jupyter-slideshow.editSlideShowInJSON"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-slideshow"},"main":"./out/extension-node.js","browser":"./out/extension-web.js","contributes":{"commands":[{"command":"jupyter-slideshow.switchSlideType","title":"Switch Slide Type"},{"command":"jupyter-slideshow.editSlideShowInJSON","title":"Edit Slide Type (JSON)","icon":"$(go-to-file)"}],"menus":{"notebook/cell/title":[{"command":"jupyter-slideshow.switchSlideType","group":"jupyter-slideshow@1"},{"command":"jupyter-slideshow.editSlideShowInJSON","group":"jupyter-slideshow@2"}]}},"scripts":{"vscode:prepublish":"npm run compile","compile":"webpack --mode none","watch":"webpack --mode none --watch","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.71.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"14.x","eslint":"^7.27.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","glob":"^7.1.7","mocha":"^10.0.0","typescript":"^4.3.2","vscode-test":"^1.5.2","ts-loader":"^9.1.1","webpack":"^5.36.2","webpack-cli":"^4.6.0"}},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/ms-toolsai.vscode-jupyter-slideshow-0.1.5-universal","path":"/home/ju/.vscode-oss/extensions/ms-toolsai.vscode-jupyter-slideshow-0.1.5-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"e153ca70-b543-4865-b4c5-b31d34185948","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"ms-toolsai","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739695403,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.vscode-jupyter-cell-tags","uuid":"ab4fb32a-befb-4102-adf9-1652d0cd6a5e"},"manifest":{"name":"vscode-jupyter-cell-tags","displayName":"Jupyter Cell Tags","description":"Jupyter Cell Tags support for VS Code","version":"0.1.6","publisher":"ms-toolsai","preview":true,"icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"author":{"name":"Microsoft Corporation"},"engines":{"vscode":"^1.71.0"},"categories":["Notebooks"],"activationEvents":["onNotebook:jupyter-notebook","onCommand:jupyter-cell-tags.removeTag","onCommand:jupyter-cell-tags.addTag","onCommand:jupyter-cell-tags.editTagsInJSON","onCommand:jupyter-cell-tags.paramaterize","onCommand:jupyter-cell-tags.removeTag","onCommand:jupyter-cell-tags.addTag","onCommand:jupyter-cell-tags.editTagsInJSON","onCommand:jupyter-cell-tags.paramaterize","onView:cell-tag"],"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter-cell-tags"},"main":"./out/extension-node.js","browser":"./out/extension-web.js","contributes":{"commands":[{"command":"jupyter-cell-tags.removeTag","title":"Remove Cell Tag","icon":"$(close)"},{"command":"jupyter-cell-tags.addTag","title":"Add Cell Tag","icon":"$(add)"},{"command":"jupyter-cell-tags.editTagsInJSON","title":"Edit Cell Tags (JSON)","icon":"$(go-to-file)"},{"command":"jupyter-cell-tags.paramaterize","title":"Mark Cell as Parameters"}],"menus":{"notebook/cell/title":[{"command":"jupyter-cell-tags.addTag","group":"jupytercelltags@1"},{"command":"jupyter-cell-tags.editTagsInJSON","group":"jupytercelltags@2"},{"command":"jupyter-cell-tags.paramaterize","group":"jupytercelltags@2"}],"view/title":[{"command":"jupyter-cell-tags.addTag","when":"view == cell-tag","group":"navigation"},{"command":"jupyter-cell-tags.editTagsInJSON","when":"view == cell-tag","group":"navigation"}],"view/item/context":[{"command":"jupyter-cell-tags.removeTag","when":"view == cell-tag","group":"inline"}]},"views":{"jupyter":[{"id":"cell-tag","name":"Cell Tags","contextualTitle":"Jupyter Cell Tags"}]}},"scripts":{"vscode:prepublish":"npm run compile","compile":"webpack --mode none","watch":"webpack --mode none --watch","pretest":"npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.71.0","@types/glob":"^7.1.3","@types/mocha":"^8.2.2","@types/node":"14.x","eslint":"^7.27.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","glob":"^7.1.7","mocha":"^10.0.0","typescript":"^4.3.2","vscode-test":"^1.5.2","ts-loader":"^9.1.1","webpack":"^5.36.2","webpack-cli":"^4.6.0"}},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/ms-toolsai.vscode-jupyter-cell-tags-0.1.6-universal","path":"/home/ju/.vscode-oss/extensions/ms-toolsai.vscode-jupyter-cell-tags-0.1.6-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"ab4fb32a-befb-4102-adf9-1652d0cd6a5e","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"ms-toolsai","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739695401,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.jupyter-renderers","uuid":"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf"},"manifest":{"name":"jupyter-renderers","displayName":"Jupyter Notebook Renderers","description":"Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)","version":"1.0.12","engines":{"vscode":"^1.73.0-insider"},"publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-notebook-renderers","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-notebook-renderers"},"bugs":{"url":"https://github.com/Microsoft/vscode-notebook-renderers/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+jupyter","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"keywords":["jupyter","notebook","notebookRenderer","multi-root ready"],"categories":["Other","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":["onNotebook:*"],"enabledApiProposals":["contribNotebookStaticPreloads"],"main":"./out/extension_renderer/index.js","browser":"./out/extension_renderer/index.js","contributes":{"notebookPreload":[{"type":"jupyter-notebook","entrypoint":"./out/client_renderer/preload.js"},{"type":"interactive","entrypoint":"./out/client_renderer/preload.js"}],"notebookRenderer":[{"id":"jupyter-notebook-renderer","entrypoint":"./out/client_renderer/renderers.js","displayName":"Jupyter Notebook Renderer","requiresMessaging":"optional","mimeTypes":["image/gif","image/png","image/jpeg","image/svg+xml","application/geo+json","application/vdom.v1+json","application/vnd.dataresource+json","application/vnd.plotly.v1+json","application/vnd.vega.v2+json","application/vnd.vega.v3+json","application/vnd.vega.v4+json","application/vnd.vegalite.v1+json","application/vnd.vegalite.v2+json","application/x-nteract-model-debug+json","text/vnd.plotly.v1+html"]},{"id":"jupyter-notebook-built-in-renderer-hooks","displayName":"Jupyter Notebook Html/JavaScript Renderer","requiresMessaging":"optional","entrypoint":{"extends":"vscode.builtin-renderer","path":"./out/client_renderer/builtinRendererHooks.js"}},{"id":"jupyter-vega-renderer","displayName":"Jupyter Vega Renderer","requiresMessaging":"optional","entrypoint":"./out/client_renderer/vegaRenderer.js","mimeTypes":["application/vnd.vega.v5+json","application/vnd.vegalite.v3+json","application/vnd.vegalite.v4+json","application/vnd.vegalite.v5+json"]}]},"scripts":{"vscode:prepublish":"npm run compile:webpack","dev":"concurrently -r npm:compile:extension:watch npm:compile:client:watch npm:compile:test:watch","compile":"npm run compile:extension && npm run compile:test && npm run compile:client","compile:extension":"tsc -p src/extension","compile:extension:watch":"tsc -p src/extension --watch","compile:test":"tsc -p src/test","compile:test:watch":"tsc -p src/test --watch","compile:webpack":"npm run build:client && npm run build:extension","compile:client":"webpack --config=build/webpack/webpack.client.config.js","build:client":"webpack --config=build/webpack/webpack.client.config.js --mode=production","build:extension":"webpack --config=build/webpack/webpack.extension.config.js --mode=production","compile:client:watch":"webpack --config=build/webpack/webpack.client.config.js --watch","lint":"eslint src --ext ts && eslint src --ext tsx && eslint build --ext js","lint-format":"npx prettier 'src/**/*.ts*' --check && npx prettier 'build/**/*.js' --check","watch":"tsc -watch -p ./","package":"vsce package -o ms-notebook-renderers.vsix","test":"node ./out/test/runTest.js","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write","postinstall":"node ./build/postInstall.js"},"dependencies":{"@babel/helper-validator-identifier":"^7.10.1","@blueprintjs/core":"^3.7.0","@blueprintjs/select":"^3.2.0","@jupyter-widgets/base":"^4.1.0","@jupyter-widgets/controls":"^3.1.0","@jupyter-widgets/jupyterlab-manager":"^3.1.0","@jupyter-widgets/output":"^4.1.0","@jupyterlab/coreutils":"^5.4.2","@jupyterlab/nbformat":"^3.4.2","@loadable/component":"^5.12.0","@nteract/transform-dataresource":"^3.0.2","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^7.0.0","@nteract/transform-vega":"7.0.10","@nteract/transforms":"^3.2.0","@phosphor/widgets":"^1.9.3","chownr":"^2.0.0","fs-minipass":"^2.1.0","jquery":"^3.6.1","lodash":"^4.17.21","minipass":"^3.1.6","minizlib":"^2.1.2","path-browserify":"^0.0.1","plotly.js-dist":"^2.11.1","re-resizable":"~6.5.5","react":"^16.8.4","react-dom":"^16.8.4","react-toggle":"^4.1.2","requirejs":"^2.3.6","styled-components":"5.2.1","tslib":"^1.14.1","underscore":"^1.13.1","util":"^0.12.3","uuid":"^3.3.2","vega":"^5.22.1","vega-embed":"^6.21.0","vega-lite":"^5.5.0","yallist":"^4.0.0"},"devDependencies":{"@types/glob":"^7.1.1","@types/loadable__component":"^5.10.0","@types/lodash":"^4.14.158","@types/mocha":"^7.0.2","@types/node":"^12.11.7","@types/react":"^16.9.35","@types/react-dom":"^16.9.8","@types/uuid":"^8.0.0","@types/vscode":"^1.60.0","@types/vscode-notebook-renderer":"^1.60.0","@typescript-eslint/eslint-plugin":"^3.1.0","@typescript-eslint/parser":"^3.1.0","concurrently":"^5.2.0","copy-webpack-plugin":"^6.0.2","css-loader":"^3.5.3","eslint":"^7.1.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.3","fork-ts-checker-webpack-plugin":"^4.1.6","glob":"^7.1.6","install":"^0.13.0","less":"^3.11.3","mocha":"^7.2.0","node-loader":"^2.0.0","prettier":"^2.0.5","style-loader":"^1.2.1","svg-inline-loader":"^0.8.2","thread-loader":"^3.0.4","ts-loader":"^9.3.1","typescript":"^4.7.4","url-loader":"^4.1.0","vscode-test":"^1.4.0","webpack":"^5.0.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.0.0","webpack-fix-default-import-plugin":"^1.0.3"},"optionalDependencies":{"canvas":"^2.7.0"},"overrides":{"ini":"1.3.6","simple-get":"3.1.1","node-fetch":"2.6.7","prismjs":"1.27.0","jquery-ui@<1.13.2":"1.13.2","url-parse@<1.5.9":"1.5.9","terser@<5.14.2":"5.14.2","ua-parser-js":"0.7.24","moment@<2.29.4":"2.29.4"}},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/ms-toolsai.jupyter-renderers-1.0.12-universal","path":"/home/ju/.vscode-oss/extensions/ms-toolsai.jupyter-renderers-1.0.12-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"b15c72f8-d5fe-421a-a4f7-27ed9f6addbf","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"ms-toolsai","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739695383,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-toolsai.jupyter","uuid":"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8"},"manifest":{"name":"jupyter","displayName":"Jupyter","version":"2022.10.110","description":"Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.","publisher":"ms-toolsai","author":{"name":"Microsoft Corporation"},"extensionPack":["ms-toolsai.jupyter-keymap","ms-toolsai.jupyter-renderers","ms-toolsai.vscode-jupyter-slideshow","ms-toolsai.vscode-jupyter-cell-tags"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-jupyter","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-jupyter"},"bugs":{"url":"https://github.com/Microsoft/vscode-jupyter/issues"},"qna":"https://github.com/microsoft/vscode-jupyter/discussions","icon":"icon.png","galleryBanner":{"color":"#ffffff","theme":"light"},"engines":{"vscode":"^1.72.0"},"keywords":["jupyter","notebook","ipynb","notebookKernelJupyterNotebook","multi-root ready","python"],"categories":["Programming Languages","Other","Extension Packs","Data Science","Machine Learning","Notebooks","Visualization"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onCommand:jupyter.viewOutput","onCommand:jupyter.export","onCommand:jupyter.exportAsPythonScript","onCommand:jupyter.exportToHTML","onCommand:jupyter.exportToPDF","onCommand:jupyter.notebookeditor.export","onCommand:jupyter.createnewnotebook","onCommand:jupyter.createnewinteractive","onCommand:jupyter.importnotebook","onCommand:jupyter.importnotebookfile","onCommand:jupyter.selectjupyteruri","onCommand:jupyter.exportfileasnotebook","onCommand:jupyter.exportfileandoutputasnotebook","onCommand:jupyter.selectJupyterInterpreter","onCommand:jupyter.selectjupytercommandline","onCommand:jupyter.openVariableView","onCommand:jupyter.selectNativeJupyterUriFromToolBar","onCommand:jupyter.clearSavedJupyterUris","onCommand:jupyter.filterKernels","onCommand:jupyter.runInDedicatedExtensionHost","onWalkthrough:jupyterWelcome","onNotebook:jupyter-notebook","onNotebook:interactive","onView:jupyterViewVariables","onWebviewPanel:jupyter-variables","onWebviewPanel:jupyter","onCommand:dataScience.ClearCache","onCommand:jupyter.replayPylanceLog","onCommand:jupyter.replayPylanceLogStep","onCommand:jupyter.debugNotebook","onCommand:jupyter.filterKernels","onCommand:jupyter.runByLine","onCommand:jupyter.runAndDebugCell","onCommand:jupyter.runByLineNext","onCommand:jupyter.runByLineStop","onCommand:jupyter.viewOutput","onCommand:jupyter.notebookeditor.export","onCommand:jupyter.export","onCommand:jupyter.exportAsPythonScript","onCommand:jupyter.exportToHTML","onCommand:jupyter.exportToPDF","onCommand:jupyter.selectJupyterInterpreter","onCommand:jupyter.runcurrentcell","onCommand:jupyter.debugcell","onCommand:jupyter.debugstepover","onCommand:jupyter.debugstop","onCommand:jupyter.debugcontinue","onCommand:jupyter.insertCellBelowPosition","onCommand:jupyter.insertCellBelow","onCommand:jupyter.insertCellAbove","onCommand:jupyter.deleteCells","onCommand:jupyter.selectCell","onCommand:jupyter.selectCellContents","onCommand:jupyter.extendSelectionByCellAbove","onCommand:jupyter.extendSelectionByCellBelow","onCommand:jupyter.moveCellsUp","onCommand:jupyter.moveCellsDown","onCommand:jupyter.changeCellToMarkdown","onCommand:jupyter.changeCellToCode","onCommand:jupyter.gotoNextCellInFile","onCommand:jupyter.gotoPrevCellInFile","onCommand:jupyter.runcurrentcelladvance","onCommand:jupyter.runcurrentcellandallbelow.palette","onCommand:jupyter.runallcellsabove.palette","onCommand:jupyter.debugcurrentcell.palette","onCommand:jupyter.execSelectionInteractive","onCommand:jupyter.createnewinteractive","onCommand:jupyter.runFileInteractive","onCommand:jupyter.debugFileInteractive","onCommand:jupyter.runallcells","onCommand:jupyter.runallcellsabove","onCommand:jupyter.runcellandallbelow","onCommand:jupyter.runcell","onCommand:jupyter.runtoline","onCommand:jupyter.runfromline","onCommand:jupyter.selectjupyteruri","onCommand:jupyter.selectjupytercommandline","onCommand:jupyter.importnotebook","onCommand:jupyter.importnotebookfile","onCommand:jupyter.exportoutputasnotebook","onCommand:jupyter.exportfileasnotebook","onCommand:jupyter.exportfileandoutputasnotebook","onCommand:jupyter.notebookeditor.undocells","onCommand:jupyter.notebookeditor.redocells","onCommand:jupyter.interruptkernel","onCommand:jupyter.restartkernel","onCommand:jupyter.notebookeditor.restartkernel","onCommand:jupyter.selectNativeJupyterUriFromToolBar","onCommand:jupyter.notebookeditor.addcellbelow","onCommand:jupyter.notebookeditor.removeallcells","onCommand:jupyter.notebookeditor.expandallcells","onCommand:jupyter.notebookeditor.collapseallcells","onCommand:jupyter.expandallcells","onCommand:jupyter.collapseallcells","onCommand:jupyter.addcellbelow","onCommand:jupyter.createnewnotebook","onCommand:jupyter.scrolltocell","onCommand:jupyter.latestExtension","onCommand:jupyter.enableDebugLogging","onCommand:jupyter.resetLoggingLevel","onCommand:jupyter.showDataViewer","onCommand:jupyter.clearSavedJupyterUris","onCommand:jupyter.openVariableView","onCommand:jupyter.openOutlineView","onCommand:jupyter.refreshDataViewer","onCommand:jupyter.interactive.clearAllCells","onCommand:jupyter.interactive.goToCode","onCommand:jupyter.interactive.exportasnotebook","onCommand:jupyter.interactive.exportas","onCommand:jupyter.interactive.copyCell","onCommand:jupyter.runInDedicatedExtensionHost","onCommand:jupyter.installPythonExtensionViaKernelPicker","onCommand:jupyter.installPythonViaKernelPicker","onCommand:jupyter.switchToLocalKernels","onCommand:jupyter.switchToRemoteKernels","onCommand:jupyter.switchToAnotherRemoteKernels","onCommand:jupyter.pickDocumentKernelSource","onLanguage:raw","onLanguage:julia","onView:jupyterViewVariables"],"main":"./out/extension.node.js","browser":"./out/extension.web.bundle.js","capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Execution of cells in Interactive Window and Notebooks is not supported in untrusted workspaces."}},"contributes":{"walkthroughs":[{"id":"jupyterWelcome","title":"Get started with Jupyter Notebooks","description":"Your first steps to set up a Jupyter project with all the powerful tools and features that the Jupyter Extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"ipynb.newUntitledIpynb","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Create: New Jupyter Notebook``.\n[Create New Jupyter Notebook](command:toSide:ipynb.newUntitledIpynb)\n If you have an existing project, you can also [open a folder](command:toSide:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:toSide:git.clone).","media":{"svg":"resources/walkthroughs/opennotebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:ipynb.newUntitledIpynb","onCommand:jupyter.createnewinteractive","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"jupyter.selectKernel","title":"Select a Jupyter kernel","description":"Click Select Kernel at the top right of the notebook and choose the environment in which to run your kernel. Or, with a notebook opened and in focus, open the [Command Palette](command:workbench.action.showCommands) and run the command: \n``Notebook: Select Notebook Kernel``. \n[Open Command Palette to Select a Jupyter Kernel](command:workbench.action.showCommands)","media":{"svg":"resources/walkthroughs/kernel.svg","altText":"Selecting or changing a notebook kernel"},"completionEvents":["onCommand:notebook.selectKernel"]},{"id":"jupyter.exploreAndDebug","title":"Explore data and debug","description":"📅 You can use the [Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data) to view, sort, and filter the rows of data. After loading your data, click \"Variables\" at the top right of notebook and click the Data Viewer icon to the left of the data table. \n \n[Learn about Data Viewer](https://code.visualstudio.com/docs/datascience/data-science-tutorial#_prepare-the-data)\n \n📒 Debug your notebook using the [Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line) mode to execute a cell one line at a time. Click the Run by Line icon from your cell (play button with lines) or hit F10. \n \n[Learn about Run by Line](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_run-by-line)","media":{"svg":"resources/walkthroughs/data.svg","altText":"Opening data viewer"}},{"id":"jupyter.dataScienceLearnMore","title":"Find out more!","description":"🎨 Explore all the features the Jupyter Extension has to offer by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with data science in [Python](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) by installing the Python Extension ([search Python extension](command:workbench.extensions.search?\"ms-python.python\")). \n 📃 Find out more features in our [Tutorials](https://code.visualstudio.com/docs/datascience/jupyter-notebooks).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthroughs/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"keybindings":[{"command":"jupyter.execSelectionInteractive","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && jupyter.ownsSelection && !notebookEditorFocused"},{"command":"jupyter.runcurrentcelladvance","key":"shift+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.runcurrentcell","key":"ctrl+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused && !jupyter.havenativecells"},{"command":"jupyter.runcurrentcellandaddbelow","key":"alt+enter","when":"editorTextFocus && !editorHasSelection && jupyter.hascodecells && !notebookEditorFocused"},{"key":"shift+enter","when":"resourceScheme == 'vscode-interactive' && notebookKernel =~ /^ms-toolsai.jupyter\\// || resourceScheme == 'vscode-interactive' && !notebookKernel","command":"interactive.execute"},{"key":"escape","when":"resourceScheme == 'vscode-interactive' && !editorHoverVisible && !suggestWidgetVisible && !isComposing && !inSnippetMode && !exceptionWidgetVisible && !selectionAnchorSet && !LinkedEditingInputVisible && !renameInputVisible && !editorHasSelection && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !findWidgetVisible && !markersNavigationVisible && !parameterHintsVisible && !editorHasMultipleSelections && !notificationToastsVisible","command":"interactive.input.clear"},{"command":"jupyter.insertCellBelowPosition","key":"ctrl+; s","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","key":"ctrl+; b","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","key":"ctrl+; a","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","key":"ctrl+; x","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","key":"ctrl+alt+shift+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","key":"ctrl+alt+shift+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","key":"ctrl+; u","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","key":"ctrl+; d","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","key":"ctrl+; m","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","key":"ctrl+; c","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","key":"ctrl+alt+]","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","key":"ctrl+alt+[","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","key":"ctrl+alt+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","key":"ctrl+alt+shift+\\","when":"editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.refreshDataViewer","key":"ctrl+r","mac":"cmd+r","when":"jupyter.dataViewerActive"},{"command":"jupyter.runAndDebugCell","key":"ctrl+alt+shift+enter","mac":"ctrl+shift+enter"},{"command":"jupyter.runByLine","key":"f10"},{"command":"jupyter.runByLineNext","key":"f10"},{"command":"jupyter.runByLineStop","key":"ctrl+enter"}],"commands":[{"command":"dataScience.ClearCache","title":"Clear Cache","category":"Jupyter (Dev)","enablement":"jupyter.development"},{"command":"jupyter.replayPylanceLog","title":"Replay Pylance Log","category":"Jupyter (Dev)","enablement":"jupyter.development && notebookType == jupyter-notebook && isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.replayPylanceLogStep","title":"Step Pylance Log","category":"Jupyter (Dev)","icon":"$(debug-start)","enablement":"jupyter.development && notebookType == jupyter-notebook && isWorkspaceTrusted && jupyter.replayLogLoaded && !jupyter.webExtension"},{"command":"jupyter.debugNotebook","title":"Debug","icon":"$(bug)","category":"Jupyter","enablement":"notebookKernelCount > 0 && resource not in jupyter.notebookeditor.runByLineDocuments"},{"command":"jupyter.filterKernels","title":"Filter Kernels","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.runByLine","title":"Run by Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted"},{"command":"jupyter.runAndDebugCell","title":"Debug Cell","icon":"$(debug-alt-small)","category":"Jupyter","enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted"},{"command":"jupyter.runByLineNext","title":"Run Next Line","icon":"$(debug-line-by-line)","category":"Jupyter","enablement":"notebookCellResource in jupyter.notebookeditor.runByLineCells"},{"command":"jupyter.runByLineStop","title":"Continue Execution","icon":"$(debug-continue-small)","category":"Jupyter","enablement":"notebookCellResource in jupyter.notebookeditor.runByLineCells"},{"command":"jupyter.viewOutput","title":"Show Output","category":"Jupyter"},{"command":"jupyter.notebookeditor.export","title":"Export As","shortTitle":"Export","category":"Notebook","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted && !jupyter.webExtension || notebookType == jupyter-notebook && isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension || isWorkspaceTrusted && jupyter.webExtension && notebookKernel =~ /^ms-toolsai.jupyter\\//"},{"command":"jupyter.selectJupyterInterpreter","title":"Select Interpreter to Start Jupyter Server","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstepover","title":"Step Over","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugstop","title":"Stop","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcontinue","title":"Continue","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.execSelectionInteractive","title":"Run Selection/Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove","title":"Run Above","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcellandallbelow","title":"Run Below","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.runtoline","title":"Run To Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.runfromline","title":"Run From Line in Interactive Window","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.selectjupyteruri","title":"Specify Jupyter Server for Connections","category":"Jupyter","enablement":"isWorkspaceTrusted"},{"command":"jupyter.selectjupytercommandline","title":"Specify Jupyter Command Line Arguments","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.importnotebookfile","title":"Import Notebook to Script","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.notebookeditor.undocells","title":"Undo Last Interactive Action","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.notebookeditor.redocells","title":"Redo Last Interactive Action","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.interruptkernel","title":"Interrupt Kernel","shortTitle":"Interrupt","category":"Jupyter","icon":{"light":"resources/light/interrupt.svg","dark":"resources/dark/interrupt.svg"},"enablement":"isWorkspaceTrusted && jupyter.interactive.canInterruptNotebookKernel"},{"command":"jupyter.restartkernel","title":"Restart Kernel","shortTitle":"Restart","category":"Jupyter","icon":{"light":"resources/light/restart-kernel.svg","dark":"resources/dark/restart-kernel.svg"},"enablement":"isWorkspaceTrusted && jupyter.interactive.canRestartNotebookKernel"},{"command":"jupyter.notebookeditor.restartkernel","title":"Restart Kernel","shortTitle":"Restart","category":"Notebook","icon":{"light":"resources/light/restart-kernel.svg","dark":"resources/dark/restart-kernel.svg"},"enablement":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.notebookeditor.canrestartNotebookkernel && isWorkspaceTrusted"},{"command":"jupyter.selectNativeJupyterUriFromToolBar","title":"Specify Jupyter Server for Connections","category":"Jupyter","icon":"$(debug-disconnect)","enablement":"isWorkspaceTrusted && !jupyter.webExtension"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.notebookeditor.expandallcells","title":"Expand All Notebook Cells","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.notebookeditor.collapseallcells","title":"Collapse All Notebook Cells","category":"Notebook","enablement":"!jupyter.webExtension"},{"command":"jupyter.expandallcells","title":"Expand All Interactive Cells","shortTitle":"Expand","category":"Jupyter","icon":"$(expand-all)"},{"command":"jupyter.collapseallcells","title":"Collapse All Interactive Cells","shortTitle":"Collapse","category":"Jupyter","icon":"$(collapse-all)"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.createnewnotebook","title":"Create New Jupyter Notebook","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.latestExtension","title":"DataScience.latestExtension","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.enableDebugLogging","title":"Enable Debug Logging","category":"Jupyter","enablement":"!jupyter.webExtension"},{"command":"jupyter.resetLoggingLevel","title":"Reset Logging Level","enablement":"!jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.showDataViewer","title":"View Value in Data Viewer","enablement":"!jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.clearSavedJupyterUris","title":"Clear Jupyter Remote Server List","category":"Jupyter"},{"command":"jupyter.openVariableView","title":"Open Variables View","shortTitle":"Variables","icon":"$(variable-group)","category":"Jupyter","enablement":"notebookType == jupyter-notebook && isWorkspaceTrusted || notebookType == interactive && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","shortTitle":"Outline","icon":"$(list-unordered)","category":"Jupyter","enablement":"notebookType == jupyter-notebook"},{"command":"jupyter.refreshDataViewer","title":"Refresh Data Viewer","category":"Jupyter","enablement":"jupyter.dataViewerActive && isWorkspaceTrusted"},{"command":"jupyter.interactive.clearAllCells","title":"Clear All","icon":"$(close)","category":"Jupyter"},{"command":"jupyter.interactive.goToCode","title":"Go to code","icon":"$(go-to-file)","category":"Jupyter"},{"command":"jupyter.interactive.exportasnotebook","title":"Export to Jupyter Notebook","shortTitle":"Save","icon":"$(save-as)","enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.exportas","title":"Export","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookType == interactive","category":"Jupyter"},{"command":"jupyter.interactive.copyCell","title":"Copy Cell","icon":"$(copy)","category":"Jupyter"},{"command":"jupyter.runInDedicatedExtensionHost","title":"Run in Dedicated Extension Host","enablement":"!jupyter.webExtension","category":"Jupyter"},{"command":"jupyter.installPythonExtensionViaKernelPicker","title":"Install Python Extension"},{"command":"jupyter.installPythonViaKernelPicker","title":"Install Python"},{"command":"jupyter.switchToLocalKernels","title":"Connect to Local Kernels"},{"command":"jupyter.switchToRemoteKernels","title":"Connect to a Jupyter Server"},{"command":"jupyter.switchToAnotherRemoteKernels","title":"Connect to Another Jupyter Server"},{"command":"jupyter.pickDocumentKernelSource","title":"Select Kernel Source"}],"menus":{"editor/context":[{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runallcells","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcell","group":"Jupyter2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runcurrentcelladvance","group":"Jupyter2"},{"command":"jupyter.runFileInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runfromline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.runtoline","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.execSelectionInteractive","group":"Jupyter2","when":"editorFocus && editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"when":"editorFocus && editorLangId == python && resourceExtname == .ipynb && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.importnotebook","group":"Jupyter3@1"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileasnotebook","group":"Jupyter3@2"},{"when":"editorFocus && editorLangId == python && jupyter.hascodecells && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.exportfileandoutputasnotebook","group":"Jupyter3@3"}],"editor/title":[{"command":"jupyter.notebookeditor.restartkernel","title":"Restart Kernel","group":"navigation@1","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.notebookeditor.canrestartNotebookkernel && config.notebook.globalToolbar != true"},{"command":"jupyter.openVariableView","title":"Open Variables View","group":"navigation@2","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true && jupyter.ispythonnotebook"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","group":"navigation@3","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar && config.notebook.globalToolbar != true"},{"command":"jupyter.notebookeditor.export","title":"Export As","group":"navigation@4","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true"},{"command":"jupyter.selectNativeJupyterUriFromToolBar","title":"Specify Jupyter Server for Connections","group":"overflow@1000","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && config.notebook.globalToolbar != true"}],"notebook/toolbar":[{"command":"jupyter.notebookeditor.restartkernel","group":"navigation/execute@1","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.kernel.isjupyter"},{"command":"jupyter.openVariableView","group":"navigation@1","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.ispythonnotebook && jupyter.kernel.isjupyter"},{"command":"jupyter.openOutlineView","group":"navigation@2","when":"notebookType == 'jupyter-notebook' && config.jupyter.showOutlineButtonInNotebookToolbar"},{"command":"jupyter.notebookeditor.export","group":"Jupyter","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted"},{"command":"jupyter.replayPylanceLogStep","group":"navigation@1","when":"notebookType == 'jupyter-notebook' && isWorkspaceTrusted && jupyter.replayLogLoaded"}],"notebook/cell/title":[{"command":"jupyter.runByLine","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.runByLineDocuments || !notebookKernel && notebookType == jupyter-notebook && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted","group":"inline/cell@0"},{"command":"jupyter.runByLineNext","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells","group":"inline/cell@0"},{"command":"jupyter.runByLineStop","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells && notebookCellToolbarLocation == left","group":"inline/cell@1"},{"command":"jupyter.runByLineStop","when":"notebookCellResource in jupyter.notebookeditor.runByLineCells && notebookCellToolbarLocation == right","group":"inline/cell@0"}],"notebook/cell/execute":[{"command":"jupyter.runAndDebugCell","when":"notebookKernel =~ /^ms-toolsai.jupyter\\// && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted && resource not in jupyter.notebookeditor.debugDocuments || !notebookKernel && jupyter.ispythonnotebook && notebookCellType == code && isWorkspaceTrusted"}],"notebook/kernelSource":[{"command":"jupyter.installPythonExtensionViaKernelPicker","when":"jupyter.showInstallPythonExtensionCommand && jupyter.controllersLoaded"},{"command":"jupyter.installPythonViaKernelPicker","when":"jupyter.showInstallPythonCommand && jupyter.controllersLoaded"},{"command":"jupyter.switchToLocalKernels","when":"jupyter.showingRemoteNotWeb"},{"command":"jupyter.switchToRemoteKernels","when":"jupyter.showingLocalOrWebEmpty"},{"command":"jupyter.switchToAnotherRemoteKernels","when":"jupyter.showingRemoteKernels"},{"command":"jupyter.pickDocumentKernelSource","when":"jupyter.pickDocumentKernelSourceContext"}],"interactive/toolbar":[{"command":"jupyter.interactive.clearAllCells","group":"navigation@0","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.restartkernel","group":"navigation@1","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interruptkernel","group":"navigation@2","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.openVariableView","group":"navigation@3","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.exportasnotebook","group":"navigation@4","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.exportas","group":"navigation@5","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.expandallcells","group":"navigation@6","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.collapseallcells","group":"navigation@7","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"}],"interactive/cell/title":[{"command":"jupyter.interactive.copyCell","group":"inline@0","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"},{"command":"jupyter.interactive.goToCode","group":"inline@1","when":"isWorkspaceTrusted && notebookKernel =~ /^ms-toolsai.jupyter\\// || isWorkspaceTrusted && !notebookKernel"}],"explorer/context":[{"when":"resourceLangId == python && !notebookEditorFocused && isWorkspaceTrusted","command":"jupyter.runFileInteractive","group":"Jupyter2"},{"when":"resourceExtname == .ipynb && isWorkspaceTrusted","command":"jupyter.importnotebookfile","group":"Jupyter"}],"commandPalette":[{"command":"jupyter.installPythonExtensionViaKernelPicker","when":"false"},{"command":"jupyter.installPythonViaKernelPicker","when":"false"},{"command":"jupyter.switchToLocalKernels","when":"false"},{"command":"jupyter.switchToRemoteKernels","when":"false"},{"command":"jupyter.switchToAnotherRemoteKernels","when":"false"},{"command":"jupyter.replayPylanceLog","title":"Replay Pylance Log","when":"jupyter.development && isWorkspaceTrusted"},{"command":"jupyter.debugNotebook","title":"Debug","when":"false"},{"command":"jupyter.interactive.copyCell","when":"false"},{"command":"jupyter.exportAsPythonScript","title":"Export to Python Script","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted && jupyter.ispythonnotebook && isWorkspaceTrusted"},{"command":"jupyter.refreshDataViewer","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportToHTML","title":"Export to HTML","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.exportToPDF","title":"Export to PDF","category":"Jupyter","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellBelow","title":"Insert Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.insertCellAbove","title":"Insert Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.deleteCells","title":"Delete Selected Cells","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCell","title":"Select Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.selectCellContents","title":"Select Cell Contents","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsUp","title":"Move Selected Cells Up","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.moveCellsDown","title":"Move Selected Cells Down","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.changeCellToCode","title":"Change Cell to Code","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoNextCellInFile","title":"Go to Next Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Jupyter","when":"jupyter.hascodecells && !notebookEditorFocused"},{"command":"jupyter.runcurrentcell","title":"Run Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && !jupyter.havenativecells && isWorkspaceTrusted"},{"command":"jupyter.debugcurrentcell.palette","title":"Debug Current Cell","category":"Jupyter","when":"editorLangId == python && jupyter.hascodecells && isWorkspaceTrusted"},{"command":"jupyter.createnewinteractive","title":"Create Interactive Window","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.runallcells","title":"Run All Cells","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive && isWorkspaceTrusted"},{"command":"jupyter.scrolltocell","title":"Scroll Cell Into View","category":"Jupyter","when":"false"},{"command":"jupyter.debugcell","title":"Debug Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runcell","title":"Run Cell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runFileInteractive","title":"Run Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.debugFileInteractive","title":"Debug Current File in Interactive Window","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.importnotebook","title":"Import Jupyter Notebook","category":"Jupyter","when":"isWorkspaceTrusted"},{"command":"jupyter.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonorinteractiveeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.interruptkernel","title":"Interrupt Kernel","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && isWorkspaceTrusted"},{"command":"jupyter.restartkernel","title":"Restart Kernel","category":"Jupyter","when":"jupyter.ispythonorinteractiveeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.undocells","title":"Undo Last Interactive Action","category":"Notebook","when":"jupyter.haveinteractivecells && jupyter.isnativeactive && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.redocells","title":"Redo Last Interactive Action","category":"Notebook","when":"jupyter.havenativeredoablecells && jupyter.isnativeactive && !notebookEditorFocused&& isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Notebook","when":"jupyter.havenativecells && jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.restartkernel","title":"Restart Kernel","category":"Notebook","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Notebook","when":"jupyter.isnativeactive && isWorkspaceTrusted"},{"command":"jupyter.notebookeditor.expandallcells","title":"Expand All Interactive Cells","category":"Notebook","when":"notebookEditorFocused && notebookType == 'jupyter-notebook'"},{"command":"jupyter.notebookeditor.collapseallcells","title":"Collapse All Interactive Cells","category":"Notebook","when":"notebookEditorFocused && notebookType == 'jupyter-notebook'"},{"command":"jupyter.expandallcells","title":"Expand All Interactive Cells","shortTitle":"Expand","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.collapseallcells","title":"Collapse All Interactive Cells","shortTitle":"Collapse","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.exportoutputasnotebook","title":"Export Interactive Window as Jupyter Notebook","category":"Jupyter","when":"jupyter.isinteractiveactive"},{"command":"jupyter.runcellandallbelow","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.runallcellsabove","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcontinue","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstop","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugstepover","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.debugcell","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.addcellbelow","title":"Add Empty Cell to File","category":"Jupyter","when":"jupyter.hascodecells && jupyter.ispythonornativeactive"},{"command":"jupyter.createnewnotebook","category":"Jupyter","when":"false"},{"command":"jupyter.runtoline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.selectjupytercommandline","category":"Jupyter","when":"!jupyter.zmqavailable"},{"command":"jupyter.runfromline","category":"Jupyter","when":"config.noExists"},{"command":"jupyter.execSelectionInteractive","category":"Jupyter","when":"editorLangId == python && !notebookEditorFocused && isWorkspaceTrusted"},{"command":"jupyter.latestExtension","title":"Download the latest version of the Jupyter Extension","category":"Jupyter","when":"false"},{"command":"jupyter.export","title":"Export As","category":"Jupyter","when":"false"},{"command":"jupyter.notebookeditor.export","title":"Export As","category":"Notebook","when":"false"},{"command":"jupyter.resetLoggingLevel","title":"Reset Logging Level","category":"Jupyter","when":"config.jupyter.logging.level != error"},{"command":"jupyter.enableDebugLogging","title":"Enable Debug Logging","category":"Jupyter","when":"config.jupyter.logging.level != debug"},{"command":"jupyter.showDataViewer","category":"Jupyter","when":"false"},{"command":"jupyter.openVariableView","title":"Open Variables View","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.openOutlineView","title":"Show Table Of Contents (Outline View)","category":"Jupyter","when":"notebookType == jupyter-notebook && isWorkspaceTrusted"},{"command":"jupyter.selectNativeJupyterUriFromToolBar","title":"Specify Jupyter Server for Connections","when":"false"},{"command":"jupyter.interactive.goToCode","when":"false"},{"command":"jupyter.interactive.clearAllCells","when":"activeEditor == 'workbench.editor.interactive' && isWorkspaceTrusted"},{"command":"jupyter.pickDocumentKernelSource","when":"false"}],"debug/variables/context":[{"command":"jupyter.showDataViewer","group":"1_view","when":"debugProtocolVariableMenuContext == 'viewableInDataViewer'"}]},"configuration":{"type":"object","title":"Jupyter","properties":{"jupyter.experiments.enabled":{"type":"boolean","default":true,"description":"Enables/disables A/B tests.","scope":"machine"},"jupyter.showVariableViewWhenDebugging":{"type":"boolean","default":true,"description":"Bring up the Variable View when starting a Run by Line session.","scope":"application"},"jupyter.logging.level":{"type":"string","default":"debug","enum":["off","error","warn","info","debug","verbose","everything"],"description":"The logging level the extension logs at.","scope":"machine"},"jupyter.experiments.optInto":{"type":"array","default":[],"items":{"enum":[]},"markdownDescription":"List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.experiments.optOutFrom":{"type":"array","default":[],"items":{"enum":[]},"markdownDescription":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).","scope":"application"},"jupyter.enableKeyboardShortcuts":{"type":"boolean","default":true,"deprecationMessage":"This setting has been deprecated as Jupyter keyboard shortcuts have been moved into the ms-toolsai.jupyter-keymap extension. If you would like to disable Jupyter keyboard shortcuts, please uninstall or disable that extension instead.","description":"Enables Jupyter style keyboard shortcuts for Notebooks.","scope":"application"},"jupyter.allowImportFromNotebook":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"jupyter.widgetScriptSources":{"type":"array","default":[],"items":{"type":"string","enum":["jsdelivr.com","unpkg.com"],"enumDescriptions":["Loads widget (javascript) scripts from https://www.jsdelivr.com/","Loads widget (javascript) scripts from https://unpkg.com/"]},"uniqueItems":true,"markdownDescription":"Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.","scope":"machine"},"jupyter.askForLargeDataFrames":{"type":"boolean","default":true,"description":"Warn the user before trying to open really large data frames.","scope":"application"},"jupyter.askForKernelRestart":{"type":"boolean","default":true,"description":"Warn the user before restarting a kernel.","scope":"application"},"jupyter.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"jupyter.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start.","scope":"resource"},"jupyter.jupyterLaunchRetries":{"type":"number","default":3,"description":"Number of times to attempt to connect to the Jupyter Notebook","scope":"resource"},"jupyter.jupyterCommandLineArguments":{"type":"array","default":[],"description":"When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Jupyter Extension.","scope":"resource"},"jupyter.notebookFileRoot":{"type":"string","default":"${fileDirname}","description":"Set the root directory for running notebooks and the Interactive window.","scope":"resource"},"jupyter.searchForJupyter":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Search all installed Python interpreters for a Jupyter installation when starting the Interactive window","scope":"resource"},"jupyter.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config for the Interactive window","scope":"resource"},"jupyter.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.","scope":"resource"},"jupyter.allowInput":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Allow the inputting of python code directly into the Interactive window"},"jupyter.showCellInputCode":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Show cell input code.","scope":"resource"},"jupyter.collapseCellInputCodeByDefault":{"type":"boolean","default":true,"description":"Collapse cell input code by default.","markdownDeprecationMessage":"This setting has been deprecated, please use `#interactiveWindow.collapseCellInputCode#` instead.","scope":"resource"},"jupyter.maxOutputSize":{"type":"number","default":400,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.","scope":"resource"},"jupyter.alwaysScrollOnNewCell":{"type":"boolean","default":false,"description":"Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.","scope":"resource","deprecationMessage":"This setting is obsolete. Use the 'interactiveWindow.alwaysScrollOnNewCell' setting instead."},"jupyter.enableScrollingForCellOutputs":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Interactive Window.","scope":"resource"},"jupyter.sendSelectionToInteractiveWindow":{"type":"boolean","default":false,"description":"When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.","scope":"resource"},"jupyter.variableExplorerExclude":{"type":"string","default":"module;function;builtin_function_or_method;ABCMeta;type","description":"Types to exclude from showing in the Interactive variable explorer","scope":"resource"},"jupyter.codeRegularExpression":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell.","scope":"resource"},"jupyter.defaultCellMarker":{"type":"string","default":"# %%","description":"Cell marker used for delineating a cell in a python file.","scope":"resource"},"jupyter.markdownRegularExpression":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.","scope":"resource"},"jupyter.allowLiveShare":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated as Live Share support for the interactive window no longer exists in the Jupyter Extension.","description":"Allow the Interactive window to be shared during a Live Share session","scope":"resource"},"jupyter.ignoreVscodeTheme":{"type":"boolean","default":false,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.","scope":"resource"},"jupyter.themeMatplotlibPlots":{"type":"boolean","default":false,"description":"In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.","scope":"resource"},"jupyter.liveShareConnectionTimeout":{"type":"number","default":1000,"deprecationMessage":"This setting is deprecated and will be removed in the next release.","description":"Amount of time to wait for guest connections to verify they have the Python Extension installed.","scope":"application"},"jupyter.decorateCells":{"type":"boolean","default":true,"description":"Draw a highlight behind the currently active cell.","scope":"resource"},"jupyter.enableCellCodeLens":{"type":"boolean","default":true,"description":"Enables code lens for 'cells' in a python file.","scope":"resource"},"jupyter.enableAutoMoveToNextCell":{"type":"boolean","default":true,"description":"Enables moving to the next cell when clicking on a 'Run Cell' code lens.","scope":"resource"},"jupyter.allowUnauthorizedRemoteConnection":{"type":"boolean","default":false,"description":"Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.","scope":"resource"},"jupyter.generateSVGPlots":{"type":"boolean","default":false,"description":"Generate SVG output for notebook plots. This allows for better display in the plot viewer at the cost of generation speed and file size.","scope":"resource"},"jupyter.codeLenses":{"type":"string","default":"jupyter.runcell, jupyter.runallcellsabove, jupyter.debugcell","description":"Set of commands to put as code lens above a cell.","scope":"resource"},"jupyter.debugCodeLenses":{"type":"string","default":"jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover","description":"Set of debug commands to put as code lens above a cell while debugging.","scope":"resource"},"jupyter.debugpyDistPath":{"type":"string","default":"","description":"Path to debugpy bits for debugging cells.","scope":"resource"},"jupyter.stopOnFirstLineWhileDebugging":{"type":"boolean","default":true,"description":"When debugging a cell, stop on the first line.","scope":"resource"},"jupyter.remoteDebuggerPort":{"type":"number","default":-1,"description":"When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.","scope":"resource"},"jupyter.disableJupyterAutoStart":{"type":"boolean","default":false,"description":"When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.","scope":"resource"},"jupyter.textOutputLimit":{"type":"number","default":20000,"deprecationMessage":"This setting is deprecated in favor of `notebook.output.textLineLimit`. This setting will be removed in an upcoming release.","description":"Limit the amount of text in Interactive cell text output to this value. 0 to allow any amount of characters.","scope":"resource"},"jupyter.colorizeInputBox":{"type":"boolean","default":true,"deprecationMessage":"This setting is deprecated and will be removed in an upcoming release.","description":"Whether or not to use the theme's peek color as the background for the input box.","scope":"resource"},"jupyter.stopOnError":{"type":"boolean","default":true,"description":"Stop running cells if a cell throws an exception.","scope":"resource"},"jupyter.addGotoCodeLenses":{"type":"boolean","default":true,"description":"After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.","scope":"resource"},"jupyter.variableQueries":{"type":"array","markdownDescription":"Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example:\n```\n[\n  {\n    \"language\": \"python\",\n    \"query\": \"%who_ls\",\n    \"parseExpr\": \"'(\\\\w+)'\"\n  }\n]\n```","scope":"machine","examples":[[{"language":"python","query":"_rwho_ls = %who_ls\\nprint(_rwho_ls)","parseExpr":"'(\\w+)'"},{"language":"julia","query":"whos","parseExpr":"'(\\w+)'"}]]},"jupyter.kernels.filter":{"type":"array","items":{"type":"object","properties":{"type":{"enum":["jupyterKernelspec","pythonEnvironment"]},"path":{"type":"string","markdownDescription":"Fully qualified path to the kernel spec or the Python environment. \nE.g. `~/miniconda3/envs/sample/bin/python`."},"required":["type","path"]}},"markdownDescription":"List of Jupyter Kernels and/or Python environments that are to be excluded from the Kernel picker.","scope":"machine-overridable","examples":[[{"type":"jupyterKernelspec","path":"/usr/share/jupyter/kernels/sample/kernelspec.json"},{"type":"jupyterKernelspec","path":"~/miniconda3/envs/sample/scripts/python.exe"}]]},"jupyter.kernels.trusted":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"Enter fully qualified paths to Kernel specification files that are to be trusted. E.g. 'C:\\Program Data\\Jupyter\\kernels\\python3\\kernel.json'.  \n**Note**: Kernels can execute code with user privileges. Click [here](https://aka.ms/JupyterTrustedKernelPaths) for further details.","scope":"machine"},"jupyter.interactiveWindowMode":{"type":"string","enum":["perFile","single","multiple"],"scope":"resource","description":"Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.","default":"multiple"},"jupyter.interactiveWindowViewColumn":{"type":"string","enum":["beside","active","secondGroup"],"scope":"resource","description":"Where to open an Interactive Window that is not associated with a python file. 'beside' will open the interactive window to the right of the active editor. 'active' will open the interactive window in place of the active editor. 'secondGroup' will open the interactive window in the second editor group.","default":"secondGroup"},"jupyter.magicCommandsAsComments":{"type":"boolean","default":false,"description":"Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.","scope":"resource"},"jupyter.pythonExportMethod":{"type":"string","enum":["direct","commentMagics","nbconvert"],"default":"direct","description":"The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.","scope":"application"},"jupyter.runStartupCommands":{"type":"array","default":"","description":"A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.","scope":"application"},"jupyter.debugJustMyCode":{"type":"boolean","default":true,"description":"When debugging, debug just my code.","scope":"resource"},"jupyter.showOutlineButtonInNotebookToolbar":{"type":"boolean","default":true,"description":"Show the Outline button in the Jupyter notebook toolbar.","scope":"resource"},"jupyter.newCellOnRunLast":{"type":"boolean","default":true,"description":"Append a new empty cell to an interactive window file on running the currently last cell.","scope":"resource"},"jupyter.pythonCompletionTriggerCharacters":{"type":"string","default":".%'\"","description":"Characters which trigger auto completion on a python jupyter kernel.","scope":"machine"},"jupyter.logKernelOutputSeparately":{"type":"boolean","default":false,"description":"Creates separate output panels for kernels/jupyter server console output","scope":"machine"},"jupyter.excludeUserSitePackages":{"type":"boolean","default":false,"description":"Add PYTHONNOUSERSITE to kernels before starting. This prevents global/user site-packages from being used in the PYTHONPATH of the kernel.","scope":"machine"},"jupyter.enableExtendedKernelCompletions":{"type":"boolean","default":false,"markdownDescription":"Enables Jedi support for extended IntelliSense completions in running Jupyter kernels (see this [setting](https://ipython.readthedocs.io/en/stable/config/options/terminal.html?highlight=use_jedi#configtrait-Completer.use_jedi)). This can greatly impact notebook cell execution performance. Use with caution.","scope":"machine"},"jupyter.showOnlyOneTypeOfKernel":{"type":"boolean","default":false,"description":"Show only one type of kernel in the kernel picker. This prevents local kernels and remote kernels from being shown at the same time in the kernel picker. Takes precedence over kernelPickerType if specified.","scope":"application","tags":["experimental"]},"jupyter.experimental.kernelPickerType":{"type":"string","enum":["Stable","OnlyOneTypeOfKernel","Insiders"],"scope":"resource","description":"Choose the type of kernel picker to use.","enumDescriptions":["The current shipping kernel picker.","Makes it so the picker will only show remote or local kernels, not both. And provides options to switch between local and remote kernels in the picker.","Insiders is the newest experimental version in development."],"default":"Stable"}}},"languages":[{"id":"raw"},{"id":"julia","aliases":["Julia","julia"],"extensions":[".jl"]}],"notebookRenderer":[{"id":"jupyter-ipywidget-renderer","entrypoint":"./out/webviews/webview-side/ipywidgetsRenderer/ipywidgetsRenderer.js","displayName":"Jupyter IPyWidget Renderer","mimeTypes":["application/vnd.jupyter.widget-view+json"],"requiresMessaging":"optional"},{"id":"jupyter-error-renderer","entrypoint":"./out/webviews/webview-side/errorRenderer/errorRenderer.js","displayName":"Jupyter Error Renderer","requiresMessaging":"always","mimeTypes":["application/vnd.code.notebook.error"]}],"viewsContainers":{"activitybar":[{"id":"jupyter","title":"Jupyter","icon":"$(notebook)"}],"panel":[{"id":"jupyter-variables","title":"Jupyter","icon":"$(notebook)"}]},"views":{"jupyter-variables":[{"type":"webview","id":"jupyterViewVariables","name":"Variables"}]},"debuggers":[{"type":"Python Kernel Debug Adapter","label":"Python Kernel Debug Adapter"},{"type":"Python Interactive Window Debug Adapter","label":"Python Interactive Window"}],"markdown.previewStyles":["resources/jupyter-markdown-style.css"]},"enabledApiProposals":["notebookControllerKind","notebookDeprecated","notebookMessaging","notebookMime","notebookCellExecutionState","portsAttributes","quickPickSortByLabel","notebookKernelSource","interactiveWindow","notebookControllerAffinityHidden"],"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-toolsai-jupyter-insiders.vsix","packagePreRelease":"gulp clean && gulp prePublishBundle && vsce package --pre-release -o ms-toolsai-jupyter-insiders.vsix","prePublishBundleStable":"cross-env BUILD_WITH_VSCODE_NLS=true IS_PRE_RELEASE_VERSION_OF_JUPYTER_EXTENSION=false gulp prePublishBundle","prePublishBundlePreRelease":"cross-env BUILD_WITH_VSCODE_NLS=true IS_PRE_RELEASE_VERSION_OF_JUPYTER_EXTENSION=true gulp prePublishBundle","prePublishNonBundle":"gulp clean && gulp prePublishNonBundle","createNycFolder":"gulp createNycFolder","validateTranslationFiles":"gulp validateTranslationFiles","compile":"tsc -watch -p ./","compile-no-watch":"tsc -p ./","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","compile-webviews-watch":"webpack --config ./build/webpack/webpack.datascience-ui.config.js --watch","compile-web-watch":"webpack --mode development --config ./build/webpack/webpack.extension.web.config.js --stats-error-details --watch --progress","compile-web":"webpack --mode development --config ./build/webpack/webpack.extension.web.config.js","compile-web-test":"cross-env VSC_TEST_BUNDLE=true npm run compile-web","compile-web-test-watch":"cross-env VSC_TEST_BUNDLE=true npm run compile-web-watch","compile-webviews-watchd":"deemon npm run compile-webviews-watch","compile-widgetTester":"cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./build/webpack/webpack.datascience-ui-widgetTester.config.js --watch","kill-compile-webviews-watchd":"deemon --kill npm run compile-webviews-watch","checkDependencies":"gulp checkDependencies","postinstall":"npm run download-api && node ./build/ci/postInstall.js","installPythonLibs":"gulp installPythonLibs","test:unittests":"mocha --config ./build/.mocha.unittests.js.json ./out/**/*.unit.test.js","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:parallel":"cross-env VSC_JUPYTER_CI_TEST_PARALLEL=1 node ./build/ci/scripts/runFunctionalTests.js","test:cover:report":"nyc report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_JUPYTER_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js && node ./out/test/languageServers/jedi/lspTeardown.node.js","pretestNativeNotebooksInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testNativeNotebooksInVSCodeWithoutTestSuffix":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","pretestNativeNotebooksWithoutPythonInVSCode":"cross-env VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders node ./out/test/datascience/dsTestSetup.js","testNativeNotebooksWithoutPythonInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true VSC_JUPYTER_CI_TEST_GREP=non-python-kernel VSC_JUPYTER_CI_TEST_DO_NOT_INSTALL_PYTHON_EXT=true node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testNativeNotebooksAndWebviews":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_JUPYTER_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=*.vscode.test,*.vscode.common.test VSC_JUPYTER_FORCE_LOGGING=1 VSC_JUPYTER_CI_TEST_GREP=webview-test VSC_JUPYTER_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.node.js ./out/test/standardTest.node.js","testWebExtension":"node ./build/launchWebTest.js","launchWebExtension":"node ./build/launchWeb.js","testPerformance":"node ./out/test/perfTest.node.js","testSmoke":"node ./out/test/testBootstrap.node.js ./out/test/smokeTest.node.js","testSmokeLogged":"cross-env VSC_JUPYTER_FORCE_LOGGING=true VSC_JUPYTER_LOG_FILE=smoke-test.log node --no-force-async-hooks-checks ./out/test/testBootstrap.node.js ./out/test/smokeTest.node.js","lint":"eslint -c .eslintrc.js --ext .ts --ext .tsx src","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write","clean":"gulp clean","updateBuildNumber":"gulp updateBuildNumber","webpack":"webpack","download-api":"vscode-dts dev","postdownload-api":"vscode-dts main","generateTelemetry":"gulp generateTelemetryMd","openInBrowser":"vscode-test-web --extensionDevelopmentPath=. ./src/test/datascience","startJupyterServer":"node build/preDebugWebTest.js","stopJupyterServer":"node build/postDebugWebTest.js","validateTelemetry":"gulp validateTelemetry","verifyUnhandledErrors":"gulp verifyUnhandledErrors","printTestResults":"gulp printTestResults","setup-precommit-hook":"husky install"},"dependencies":{"@enonic/fnv-plus":"^1.3.0","@fluentui/react":"^7.160.1","@jupyter-widgets/base":"4.0.0","@jupyter-widgets/controls":"3.0.0","@jupyter-widgets/schema":"0.4.0","@jupyterlab/coreutils":"5.1.17","@jupyterlab/nbformat":"3.1.17","@jupyterlab/services":"6.1.17","@lumino/widgets":"^1.28.0","@nteract/messaging":"^7.0.0","@vscode/extension-telemetry":"^0.6.2","@vscode/jupyter-ipywidgets":"^1.0.9","@vscode/jupyter-lsp-middleware":"^0.2.50","ajv-keywords":"^3.5.2","ansi-to-html":"^0.6.7","arch":"^2.1.0","bootstrap":"^4.3.1","bootstrap-less":"^3.3.8","cross-fetch":"^3.1.5","decompress-response":"^4.2.0","encoding":"^0.1.13","fast-deep-equal":"^2.0.1","font-awesome":"^4.7.0","format-util":"^1.0.5","fs-extra":"^4.0.3","glob":"^7.1.2","iconv-lite":"^0.4.21","image-size":"^1.0.0","inversify":"^5.0.1","isomorphic-ws":"^4.0.1","jquery":"^3.6.0","jsonc-parser":"^2.0.3","lodash":"^4.17.21","marked":"^4.0.10","named-js-regexp":"^1.3.3","node-fetch":"^2.6.7","node-stream-zip":"^1.6.0","pdfkit":"^0.13.0","pidtree":"^0.6.0","portfinder":"^1.0.25","re-resizable":"~6.5.5","react":"^16.5.2","react-data-grid":"^6.0.2-0","react-dom":"^16.5.2","react-redux":"^7.1.1","react-svg-pan-zoom":"3.9.0","react-svgmt":"1.1.11","react-virtualized":"^9.21.1","redux":"^4.0.4","redux-logger":"^3.0.6","reflect-metadata":"^0.1.12","requirejs":"^2.3.6","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","safe-buffer":"^5.2.1","sanitize-filename":"^1.6.3","semver":"^5.5.0","setimmediate":"^1.0.5","slickgrid":"^2.4.17","source-map":"^0.7.3","stack-trace":"0.0.10","string-argv":"^0.3.1","strip-comments":"^2.0.1","styled-components":"^5.2.1","sudo-prompt":"^9.2.1","svg-inline-react":"^3.1.0","svg-to-pdfkit":"^0.1.8","tcp-port-used":"^1.0.1","tmp":"^0.0.29","uint64be":"^1.0.1","underscore":"^1.12.1","unicode":"^10.0.0","untildify":"^3.0.2","url-parse":"^1.5.10","uuid":"^3.3.2","vscode-debugprotocol":"^1.41.0","vscode-jsonrpc":"8.0.2-next.1","vscode-languageclient":"8.0.2-next.5","vscode-languageserver":"8.0.2-next.5","vscode-languageserver-protocol":"3.17.2-next.6","vscode-nls":"^5.0.1","vscode-tas-client":"^0.1.27","ws":"^6.2.2","zeromq":"^6.0.0-beta.6"},"devDependencies":{"@actions/core":"^1.9.1","@actions/github":"^4.0.0","@actions/glob":"^0.3.0","@babel/cli":"^7.15.4","@babel/core":"^7.4.4","@babel/plugin-transform-runtime":"^7.4.4","@babel/polyfill":"^7.4.4","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@babel/register":"^7.9.0","@istanbuljs/nyc-config-typescript":"^0.1.3","@octokit/core":"^3.2.4","@octokit/plugin-paginate-rest":"^2.7.0","@octokit/webhooks":"^7.21.0","@sinonjs/fake-timers":"^6.0.1","@types/ansi-regex":"^4.0.0","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/copy-webpack-plugin":"^6.0.0","@types/cors":"^2.8.6","@types/debug":"^4.1.5","@types/dedent":"^0.7.0","@types/del":"^4.0.0","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/format-util":"^1.0.2","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/html-webpack-plugin":"^3.2.0","@types/iconv-lite":"^0.0.1","@types/jsdom":"^16.2.13","@types/json2csv":"^5.0.3","@types/loadable__component":"^5.10.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/memoize-one":"^4.1.1","@types/mocha":"^9.1.0","@types/nock":"^10.0.3","@types/node":"^14.17.4","@types/node-fetch":"^2.5.7","@types/pdfkit":"^0.11.0","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/react-redux":"^7.1.5","@types/react-virtualized":"^9.21.2","@types/redux-logger":"^3.0.7","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^7.5.1","@types/sinonjs__fake-timers":"^6.0.1","@types/stack-trace":"0.0.29","@types/strip-comments":"^2.0.1","@types/tcp-port-used":"^1.0.0","@types/temp":"^0.8.32","@types/tmp":"^0.2.3","@types/untildify":"^3.0.0","@types/url-parse":"^1.4.8","@types/uuid":"^3.4.3","@types/uuid-to-hex":"^1.1.0","@types/vscode-notebook-renderer":"^1.60.0","@types/webpack-bundle-analyzer":"^2.13.0","@types/webpack-env":"^1.16.3","@types/ws":"^6.0.1","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^5.13.0","@typescript-eslint/eslint-plugin-tslint":"^5.13.0","@typescript-eslint/parser":"^5.13.0","@vscode/test-electron":"^2.1.5","@vscode/test-web":"^0.0.29","acorn":"^6.4.1","babel-polyfill":"^6.26.0","bufferutil":"^4.0.6","chai":"^4.3.0","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","chai-exclude":"^2.0.2","clean-terminal-webpack-plugin":"^3.0.0","codecov":"^3.7.1","colors":"^1.2.1","copy-webpack-plugin":"^10.2.4","cors":"^2.8.5","cross-env":"^6.0.3","cross-spawn":"^6.0.5","css-loader":"^6.6.0","dedent":"^0.7.0","deemon":"^1.4.0","del":"^3.0.0","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","es-abstract":"^1.19.1","es5-ext":"^0.10.53","eslint":"^7.32.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^6.15.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.25.4","eslint-plugin-jsdoc":"^31.0.4","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-local-rules":"file:build/eslint-rules","eslint-plugin-no-null":"^1.0.2","eslint-plugin-no-only-tests":"^2.6.0","eslint-plugin-prefer-arrow":"^1.2.2","eslint-plugin-prettier":"^3.1.2","eslint-plugin-react":"^7.22.0","eslint-plugin-react-hooks":"^4.0.0","expose-gc":"^1.0.0","expose-loader":"^3.1.0","express":"^4.17.1","fast-xml-parser":"^3.16.0","flat":"^4.0.0","fork-ts-checker-webpack-plugin":"^7.0.0","get-port":"^3.2.0","glob-parent":"^6.0.2","gulp":"^4.0.2","gulp-filter":"^5.1.0","gulp-rename":"^1.4.0","gulp-typescript":"^6.0.0-alpha.1","html-webpack-plugin":"^5.5.0","husky":"^7.0.0","jsdom":"^20.0.0","json2csv":"^5.0.7","jsonschema":"^1.4.1","keyv":"^4.1.0","less":"^3.9.0","less-loader":"^10.2.0","less-plugin-inline-urls":"^1.2.0","lolex":"^5.1.2","lru-cache":"^6.0.0","md5":"^2.3.0","mimic-response":"^4.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","nocache":"^2.1.0","nock":"^10.0.6","node-gyp-build":"^4.2.3","node-has-native-dependencies":"^1.0.2","node-html-parser":"^1.1.13","nyc":"^15.0.0","path-browserify":"^1.0.1","popper.js":"^1.16.1","postcss":"^8.4.6","postcss-import":"^14.0.2","postcss-loader":"^6.2.1","postcss-preset-env":"^7.3.1","prettier":"^2.0.2","process-nextick-args":"^2.0.1","range-inclusive":"^1.0.2","relative":"^3.0.2","remove-files-webpack-plugin":"^1.4.0","rewiremock":"^3.13.0","rimraf":"^3.0.2","screenshot-desktop":"^1.12.7","sinon":"^8.0.1","source-map-support":"^0.5.12","string_decoder":"~1.1.1","style-loader":"^3.3.1","svg-inline-loader":"^0.8.0","thread-loader":"^3.0.4","transform-loader":"^0.2.4","ts-loader":"^9.2.8","ts-mock-imports":"^1.3.0","ts-mockito":"^2.5.0","ts-node":"^8.3.0","tsconfig-paths-webpack-plugin":"^3.2.0","tslib":"^2.3.0","typemoq":"^2.1.0","typescript":"^4.7.4","unicode-properties":"^1.3.1","utf-8-validate":"^5.0.8","util":"^0.12.4","uuid-to-hex":"^1.1.1","vscode-dts":"^0.3.2","vscode-nls-dev":"^4.0.0","webpack":"^5.68.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","why-is-node-running":"^2.0.3","xml-js":"^1.6.11","yargs":"^17.3.1","yargs-parser":"^13.1.2"},"optionalDependencies":{"canvas":"^2.7.0","fsevents":"^2.3.2"},"overrides":{"simple-get@<3.1.1":"3.1.1","validator@<13.7.0":"13.7.0","jpeg-js@<0.4.4":"0.4.4","playwright-core":{"jpeg-js":"0.4.4"},"terser@<5.14.2":"5.14.2","glob-parent@<5.1.2":"5.1.2","jquery-ui@<1.13.2":"1.13.2","@jupyterlab/coreutils":{"url-parse":"$url-parse"},"d3-color":"3.1.0"}},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/ms-toolsai.jupyter-2022.10.110-universal","path":"/home/ju/.vscode-oss/extensions/ms-toolsai.jupyter-2022.10.110-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"6c2f1801-1e7f-45b2-9b5c-7782f1e076e8","publisherId":"ac8eb7c9-3e59-4b39-8040-f0484d8170ce","publisherDisplayName":"ms-toolsai","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739695380,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.","version":"2022.20.1","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["quickPickSortByLabel","testObserver","telemetryLogger"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.74.0"},"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Formatters","Other","Data Science","Machine Learning","Notebooks"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugDynamicConfigurations:python","onDebugResolve:python","onCommand:python.setInterpreter","onCommand:python.viewLanguageServerOutput","onCommand:python.viewOutput","onCommand:python.startREPL","onCommand:python.createTerminal","onCommand:python.configureTests","onCommand:python.enableSourceMapSupport","onCommand:python.launchTensorBoard","onCommand:python.clearCacheAndReload","onCommand:python.createEnvironment","onCommand:python.createNewFile","onCommand:python.refreshTensorBoard","onCommand:testing.reRunFailTests","onWalkthrough:pythonWelcome","onWalkthrough:pythonWelcomeWithDS","onWalkthrough:pythonDataScienceWelcome","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py","onCommand:python.createNewFile","onCommand:python.analysis.restartLanguageServer","onCommand:python.clearCacheAndReload","onCommand:python.clearWorkspaceInterpreter","onCommand:python.configureTests","onCommand:python.createTerminal","onCommand:python.createEnvironment","onCommand:python.enableLinting","onCommand:python.enableSourceMapSupport","onCommand:python.execInTerminal","onCommand:python.execInTerminal-icon","onCommand:python.debugInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.execSelectionInTerminal","onCommand:python.launchTensorBoard","onCommand:python.refreshTensorBoard","onCommand:python.reportIssue","onCommand:testing.reRunFailTests","onCommand:python.runLinting","onCommand:python.setInterpreter","onCommand:python.setLinter","onCommand:python.sortImports","onCommand:python.startREPL","onCommand:python.viewLanguageServerOutput","onCommand:python.viewOutput","onLanguage:jinja","onLanguage:pip-requirements","onLanguage:yaml","onLanguage:ini","onLanguage:toml","onLanguage:json"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","contributes":{"walkthroughs":[{"id":"pythonWelcome","title":"Get started with Python development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":""},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.selectInterpreter","title":"Select a Python Interpreter","description":"Choose which Python interpreter/environment you want to use for your Python project.\n[Select Python Interpreter](command:python.setInterpreter)\n**Tip**: Run the ``Python: Select Interpreter`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/python-interpreter.svg","altText":"Selecting a python interpreter from the status bar"},"when":"workspaceFolderCount == 0"},{"id":"python.createEnvironment","title":"Create a Python Environment ","description":"Create an environment for your Python project.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).\n 🔍 Check out our [docs](https://aka.ms/pythonenvs) to learn more.","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"},"when":"workspaceFolderCount > 0"},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."},"when":""},{"id":"python.learnMoreWithDS","title":"Explore more resources","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Learn More](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"},"when":""}]},{"id":"pythonDataScienceWelcome","title":"Get started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment"},{"category":"Python","command":"python.enableLinting","title":"Enable/Disable Linting"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.runLinting","title":"Run Linting"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.setLinter","title":"Select Linter"},{"category":"Python Refactor","command":"python.sortImports","title":"Sort Imports"},{"category":"Python","command":"python.startREPL","title":"Start REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"}],"configuration":{"properties":{"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array"},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","description":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See https://aka.ms/AAfekmf to understand when this is used","scope":"machine-overridable","type":"string"},"python.diagnostics.sourceMapsEnabled":{"default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application","type":"boolean"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"machine","type":"boolean"},"python.experiments.optInto":{"default":[],"description":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt"]},"scope":"machine","type":"array"},"python.experiments.optOutFrom":{"default":[],"description":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt"]},"scope":"machine","type":"array"},"python.formatting.autopep8Args":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.formatting.autopep8Path":{"default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.formatting.blackArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.formatting.blackPath":{"default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.formatting.provider":{"default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","none","yapf"],"scope":"resource","type":"string"},"python.formatting.yapfArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.formatting.yapfPath":{"default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.linting.banditArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.banditEnabled":{"default":false,"description":"Whether to lint Python files using bandit.","scope":"resource","type":"boolean"},"python.linting.banditPath":{"default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.cwd":{"default":null,"description":"Optional working directory for linters.","scope":"resource","type":"string"},"python.linting.enabled":{"default":true,"description":"Whether to lint Python files.","scope":"resource","type":"boolean"},"python.linting.flake8Args":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.flake8CategorySeverity.E":{"default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.flake8CategorySeverity.F":{"default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.linting.flake8CategorySeverity.W":{"default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.flake8Enabled":{"default":false,"description":"Whether to lint Python files using flake8.","scope":"resource","type":"boolean"},"python.linting.flake8Path":{"default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.ignorePatterns":{"default":["**/site-packages/**/*.py",".vscode/*.py"],"description":"Patterns used to exclude files or folders from being linted.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.lintOnSave":{"default":true,"description":"Whether to lint Python files when saved.","scope":"resource","type":"boolean"},"python.linting.maxNumberOfProblems":{"default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource","type":"number"},"python.linting.mypyArgs":{"default":["--follow-imports=silent","--ignore-missing-imports","--show-column-numbers","--no-pretty"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.mypyCategorySeverity.error":{"default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.mypyCategorySeverity.note":{"default":"Information","description":"%python.linting.mypyCategorySeverity.note.description%.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.mypyEnabled":{"default":false,"description":"Whether to lint Python files using mypy.","scope":"resource","type":"boolean"},"python.linting.mypyPath":{"default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.prospectorArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.prospectorEnabled":{"default":false,"description":"Whether to lint Python files using prospector.","scope":"resource","type":"boolean"},"python.linting.prospectorPath":{"default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pycodestyleArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pycodestyleCategorySeverity.E":{"default":"Error","description":"Severity of pycodestyle message type 'E'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pycodestyleCategorySeverity.W":{"default":"Warning","description":"Severity of pycodestyle message type 'W'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pycodestyleEnabled":{"default":false,"description":"Whether to lint Python files using pycodestyle.","scope":"resource","type":"boolean"},"python.linting.pycodestylePath":{"default":"pycodestyle","description":"Path to pycodestyle, you can use a custom version of pycodestyle by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pydocstyleArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pydocstyleEnabled":{"default":false,"description":"Whether to lint Python files using pydocstyle.","scope":"resource","type":"boolean"},"python.linting.pydocstylePath":{"default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pylamaArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pylamaEnabled":{"default":false,"description":"Whether to lint Python files using pylama.","scope":"resource","type":"boolean"},"python.linting.pylamaPath":{"default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.linting.pylintArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.linting.pylintCategorySeverity.convention":{"default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.error":{"default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.fatal":{"default":"Error","description":"Severity of Pylint message type 'Error/F'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.refactor":{"default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintCategorySeverity.warning":{"default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.linting.pylintEnabled":{"default":false,"description":"Whether to lint Python files using pylint.","scope":"resource","type":"boolean"},"python.linting.pylintPath":{"default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.logging.level":{"default":"error","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.sortImports.args":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array","deprecationMessage":"This setting will be removed soon. Use `isort.args` instead."},"python.sortImports.path":{"default":"","description":"Path to isort script, default using inner version","scope":"machine-overridable","type":"string","deprecationMessage":"This setting will be removed soon. Use `isort.path` instead."},"python.tensorBoard.logDirectory":{"default":"","description":"Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.","scope":"resource","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array"},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused"},{"command":"python.refreshTensorBoard","key":"ctrl+r","mac":"cmd+r","when":"python.hasActiveTensorBoardSession"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*-requirements.{txt, in}","**/*-constraints.txt","**/requirements-*.{txt, in}","**/constraints-*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.enableLinting","title":"Enable/Disable Linting","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false && editorLangId == python"},{"category":"Python","command":"python.debugInTerminal","icon":"$(debug-alt)","title":"Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.launchTensorBoard","title":"Launch TensorBoard","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.refreshTensorBoard","enablement":"python.hasActiveTensorBoardSession","icon":"$(refresh)","title":"Refresh TensorBoard","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.runLinting","title":"Run Linting","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setLinter","title":"Select Linter","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Refactor","command":"python.sortImports","title":"Sort Imports","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.startREPL","title":"Start REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.sortImports","group":"Refactor","title":"Sort Imports","when":"editorLangId == python && !notebookEditorFocused && !virtualWorkspace && shellExecutionSupported"}],"editor/title":[{"command":"python.refreshTensorBoard","group":"navigation@0","when":"python.hasActiveTensorBoardSession && !virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.debugInTerminal","group":"navigation@1","title":"Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build","lint-fix":"eslint --fix --ext .ts,.js src build gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@vscode/jupyter-lsp-middleware":"^0.2.50","@vscode/extension-telemetry":"^0.7.2-preview","arch":"^2.1.0","diff-match-patch":"^1.0.0","fs-extra":"^10.0.1","glob":"^7.2.0","hash.js":"^1.1.7","iconv-lite":"^0.6.3","inversify":"^5.0.4","jsonc-parser":"^3.0.0","lodash":"^4.17.21","md5":"^2.2.1","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","stack-trace":"0.0.10","semver":"^5.5.0","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","untildify":"^4.0.0","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"8.0.2-next.1","vscode-languageclient":"8.0.2-next.5","vscode-languageserver":"8.0.2-next.5","vscode-languageserver-protocol":"3.17.2-next.6","vscode-nls":"^5.0.1","vscode-tas-client":"^0.1.63","winreg":"^1.2.4","xml2js":"^0.4.19","which":"^2.0.2"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/diff-match-patch":"^1.0.32","@types/download":"^8.0.1","@types/fs-extra":"^9.0.13","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/mocha":"^9.1.0","@types/nock":"^10.0.3","@types/node":"^14.18.0","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^10.0.11","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/uuid":"^8.3.4","@types/vscode":"~1.68.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","@vscode/telemetry-extractor":">=1.9.8","@vscode/test-electron":"^2.1.3","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","es5-ext":"0.10.53","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.22.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^4.0.0","gulp-typescript":"^5.0.0","mocha":"^9.2.2","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","nock":"^10.0.6","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","rimraf":"^3.0.2","shortid":"^2.2.8","sinon":"^13.0.1","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"4.5.5","uuid":"^8.3.2","vsce":"^2.6.6","vscode-debugadapter-testsupport":"^1.27.0","vscode-nls-dev":"^4.0.0","webpack":"^5.70.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","yargs":"^15.3.1"},"extensionPack":["ms-toolsai.jupyter","ms-python.vscode-pylance","ms-python.isort"]},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/ms-python.python-2022.20.1-universal","path":"/home/ju/.vscode-oss/extensions/ms-python.python-2022.20.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739695377,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"ms-python.isort","uuid":"4ad0ce32-ff3f-49f0-83b5-93e5dc00cfff"},"manifest":{"name":"isort","displayName":"isort","description":"Import Organization support for python files using `isort`.","version":"2022.8.0","preview":true,"serverInfo":{"name":"isort","module":"isort"},"publisher":"ms-python","license":"MIT","homepage":"https://github.com/Microsoft/vscode-isort","repository":{"type":"git","url":"https://github.com/microsoft/vscode-isort.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-isort/issues"},"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"keywords":["python","formatting","isort"],"engines":{"vscode":"^1.72.0"},"categories":["Programming Languages","Formatters"],"extensionDependencies":["ms-python.python"],"activationEvents":["onLanguage:python","workspaceContains:pyproject.toml","workspaceContains:.isort","workspaceContains:*.py","onCommand:isort.restart","onLanguage:toml","onCommand:isort.restart"],"main":"./dist/extension.js","scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","tests":"node ./out/test/ts_tests/runTest.js","vsce-package":"vsce package -o isort.vsix"},"contributes":{"languages":[{"filenames":["pyproject.toml",".isort"],"id":"toml"}],"configuration":{"properties":{"isort.args":{"default":[],"description":"Arguments passed in. Each argument is a separate string in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"isort.check":{"default":false,"description":"Controls whether to run `isort` and report import sort issues.","scope":"resource","type":"boolean","tags":["experimental"]},"isort.importStrategy":{"default":"useBundled","description":"Defines where `isort` is imported from. This setting may be ignored if `isort.path` is set.","enum":["useBundled","fromEnvironment"],"enumDescriptions":["Always use the bundled version of `isort`.","Use `isort` from environment, fallback to bundled version only if `isort` not available in the environment."],"scope":"window","type":"string"},"isort.interpreter":{"default":[],"description":"When set to a path to python executable, extension will use that to launch the server and any subprocess.","scope":"window","items":{"type":"string"},"type":"array"},"isort.logLevel":{"default":"error","description":"The trace level the extension logs at, defaults to 'error'.","enum":["debug","error","info","off","warn"],"scope":"window","type":"string","enumDescriptions":["Includes verbose logging intended for debugging purposes.","Only errors and always logged information.","Includes all messages that are not marked as verbose or debug.","Most logging is turned off, any information that is always logged might still be shown.","Includes all messages in the error category and any additional warnings."]},"isort.path":{"default":[],"description":"When set to a path to `isort` binary, extension will use that for linting. NOTE: Using this option may slowdown linting.","scope":"resource","items":{"type":"string"},"type":"array","examples":[["~/global_env/isort"],["~/.env/python","-m","isort"]]},"isort.severity":{"default":{"W":"Warning","E":"Hint"},"additionalProperties":{"type":"string","enum":["Error","Hint","Information","Warning"]},"description":"Mapping from severity of `isort` message type to severity shown in problem window.","scope":"resource","type":"object"},"isort.showNotifications":{"default":"off","description":"Controls when notifications are shown by this extension.","enum":["off","onError","onWarning","always"],"enumDescriptions":["All notifications are turned off, any errors or warning are still available in the logs.","Notifications are shown only in the case of an error.","Notifications are shown for errors and warnings.","Notifications are show for anything that the server chooses to show."],"scope":"machine","type":"string"}}},"commands":[{"title":"Restart Server","category":"isort Formatter","command":"isort.restart"}]},"dependencies":{"fs-extra":"^10.1.0","vscode-languageclient":"^7.0.0","vscode-nls":"^5.2.0"},"devDependencies":{"@types/chai":"^4.3.3","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.5","@types/fs-extra":"^9.0.13","@types/glob":"^8.0.0","@types/mocha":"^10.0.0","@types/node":"14.x","@types/sinon":"^10.0.13","@types/vscode":"^1.71.0","@typescript-eslint/eslint-plugin":"^5.42.0","@typescript-eslint/parser":"^5.42.0","@vscode/test-electron":"^2.2.0","chai":"^4.3.6","chai-arrays":"^2.2.0","chai-as-promised":"^7.1.1","eslint":"^8.26.0","glob":"^8.0.3","mocha":"^10.1.0","prettier":"^2.7.1","sinon":"^14.0.1","ts-loader":"^9.4.1","typemoq":"^2.1.0","typescript":"^4.8.4","vsce":"^2.13.0","vscode-nls-dev":"^4.0.3","webpack":"^5.74.0","webpack-cli":"^4.10.0"}},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/ms-python.isort-2022.8.0-universal","path":"/home/ju/.vscode-oss/extensions/ms-python.isort-2022.8.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"4ad0ce32-ff3f-49f0-83b5-93e5dc00cfff","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"ms-python","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739700796,"preRelease":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"golang.go","uuid":"d6f6cfea-4b6f-41f4-b571-6ad2ab7918da"},"manifest":{"name":"go","displayName":"Go","version":"0.37.0","publisher":"golang","description":"Rich Go language support for Visual Studio Code","author":{"name":"Go Team at Google"},"license":"MIT","icon":"media/go-logo-blue.png","categories":["Programming Languages","Snippets","Linters","Debuggers","Formatters","Testing"],"galleryBanner":{"color":"#F2F2F2","theme":"light"},"private":true,"repository":{"type":"git","url":"https://github.com/golang/vscode-go"},"bugs":{"url":"https://github.com/golang/vscode-go/issues"},"keywords":["multi-root ready"],"scripts":{"vscode:prepublish":"npm run compile","bundle":"esbuild src/goMain.ts debugAdapter=src/debugAdapter/goDebug.ts --bundle --outdir=dist --external:vscode --format=cjs --platform=node","bundle-dev":"npm run bundle -- --sourcemap","bundle-watch":"npm run bundle -- --sourcemap --watch","test-compile":"tsc -p ./","compile":"npm run bundle","watch":"tsc -watch -p ./","test":"npm run test-compile && node ./out/test/runTest.js","lint":"gts lint src test","fix-lint":"gts fix src test","unit-test":"npm run test-compile && node ./node_modules/mocha/bin/_mocha -u tdd --timeout 5000 --colors ./out/test/unit","format":"prettier --write \"src/**/*.ts\" \"test/**/*.ts\""},"extensionDependencies":[],"dependencies":{"@vscode/codicons":"0.0.32","diff":"4.0.2","glob":"7.1.7","json-rpc2":"2.0.0","moment":"2.29.4","semver":"7.3.4","tree-kill":"file:third_party/tree-kill","vscode-debugadapter":"1.45.0","vscode-debugadapter-testsupport":"1.45.0","vscode-debugprotocol":"1.45.0","vscode-languageclient":"8.0.1","vscode-languageserver-protocol":"3.17.1","vscode-uri":"3.0.3","web-request":"1.0.7"},"devDependencies":{"@types/adm-zip":"0.4.33","@types/fs-extra":"8.1.1","@types/glob":"7.1.3","@types/mocha":"7.0.2","@types/node":"13.13.46","@types/semver":"7.3.4","@types/sinon":"9.0.11","@types/vscode":"1.67.0","@vscode/test-electron":"2.0.2","adm-zip":"0.4.16","esbuild":"0.12.21","fs-extra":"9.1.0","get-port":"5.1.1","gts":"4.0.0","mocha":"9.2.2","prettier":"2.2.1","sinon":"9.2.4","ts-loader":"7.0.5","typescript":"4.6.4","yarn":"1.22.10"},"engines":{"vscode":"^1.67.0","node":">=12.0.0"},"activationEvents":["onLanguage:go","workspaceContains:*.go","workspaceContains:*/*.go","workspaceContains:*/*/*.go","onCommand:go.gopath","onCommand:go.goroot","onCommand:go.tools.install","onCommand:go.locate.tools","onCommand:go.show.commands","onCommand:go.run.modinit","onDebugInitialConfigurations","onDebugResolve:go","onWebviewPanel:welcomeGo","onView:go.test.profile","onLanguage:go","onLanguage:go.mod","onLanguage:go.work","onLanguage:go.sum","onLanguage:gotmpl","onLanguage:govulncheck","onCommand:go.gopath","onCommand:go.goroot","onCommand:go.locate.tools","onCommand:go.test.cursor","onCommand:go.test.cursorOrPrevious","onCommand:go.subtest.cursor","onCommand:go.debug.subtest.cursor","onCommand:go.benchmark.cursor","onCommand:go.debug.cursor","onCommand:go.test.file","onCommand:go.test.package","onCommand:go.test.refresh","onCommand:go.test.showProfiles","onCommand:go.test.captureProfile","onCommand:go.test.deleteProfile","onCommand:go.test.showProfileFile","onCommand:go.benchmark.package","onCommand:go.benchmark.file","onCommand:go.test.workspace","onCommand:go.test.previous","onCommand:go.debug.previous","onCommand:go.test.coverage","onCommand:go.test.generate.package","onCommand:go.test.generate.file","onCommand:go.test.generate.function","onCommand:go.impl.cursor","onCommand:go.extractServerChannel","onCommand:go.welcome","onCommand:go.toggle.gc_details","onCommand:go.import.add","onCommand:go.add.package.workspace","onCommand:go.tools.install","onCommand:go.toggle.test.file","onCommand:go.vulncheck.toggle","onCommand:go.add.tags","onCommand:go.remove.tags","onCommand:go.fill.struct","onCommand:go.show.commands","onCommand:go.browse.packages","onCommand:go.get.package","onCommand:go.playground","onCommand:go.lint.package","onCommand:go.lint.workspace","onCommand:go.vet.package","onCommand:go.vet.workspace","onCommand:go.build.package","onCommand:go.build.workspace","onCommand:go.install.package","onCommand:go.run.modinit","onCommand:go.test.cancel","onCommand:go.apply.coverprofile","onCommand:go.godoctor.extract","onCommand:go.godoctor.var","onCommand:go.languageserver.restart","onCommand:go.environment.choose","onCommand:go.survey.showConfig","onCommand:go.survey.resetConfig","onCommand:go.workspace.resetState","onCommand:go.global.resetState","onCommand:go.explorer.refresh","onCommand:go.explorer.open","onCommand:go.workspace.editEnv","onCommand:go.workspace.resetEnv","onView:go.explorer","onView:go.test.profile"],"main":"./dist/goMain.js","capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["go.alternateTools","go.gopath","go.goroot","go.inferGopath","go.toolsGopath","go.toolsEnvVars","go.toolsManagement.go"]}},"contributes":{"languages":[{"id":"go","extensions":[".go"],"aliases":["Go"]},{"id":"go.mod","filenames":["go.mod","gopls.mod"],"aliases":["Go Module File"],"configuration":"./languages/go.mod.language-configuration.json"},{"id":"go.work","filenames":["go.work"],"aliases":["Go Work File"],"configuration":"./languages/go.mod.language-configuration.json"},{"id":"go.sum","filenames":["go.sum"],"aliases":["Go Checksum File"]},{"id":"gotmpl","extensions":[".tmpl",".gotmpl"],"aliases":["Go Template File"]},{"id":"govulncheck","aliases":["Govulncheck Output"]}],"grammars":[{"language":"go.mod","scopeName":"go.mod","path":"./syntaxes/go.mod.tmGrammar.json"},{"language":"go.work","scopeName":"go.mod","path":"./syntaxes/go.mod.tmGrammar.json"},{"language":"go.sum","scopeName":"go.sum","path":"./syntaxes/go.sum.tmGrammar.json"},{"language":"govulncheck","scopeName":"govulncheck","path":"./syntaxes/govulncheck.tmGrammar.json"}],"snippets":[{"language":"go","path":"./snippets/go.json"}],"configurationDefaults":{"[go]":{"editor.insertSpaces":false,"editor.formatOnSave":true,"editor.codeActionsOnSave":{"source.organizeImports":true},"editor.suggest.snippetsPreventQuickSuggestions":false}},"commands":[{"command":"go.gopath","title":"Go: Current GOPATH","description":"See the currently set GOPATH."},{"command":"go.goroot","title":"Go: Current GOROOT","description":"See the currently set GOROOT."},{"command":"go.locate.tools","title":"Go: Locate Configured Go Tools","description":"List all the Go tools being used by this extension along with their locations."},{"command":"go.test.cursor","title":"Go: Test Function At Cursor","description":"Runs a unit test at the cursor."},{"command":"go.test.cursorOrPrevious","title":"Go: Test Function At Cursor or Test Previous","description":"Runs a unit test at the cursor if one is found, otherwise re-runs the last executed test."},{"command":"go.subtest.cursor","title":"Go: Subtest At Cursor","description":"Runs a sub test at the cursor."},{"command":"go.debug.subtest.cursor","title":"Go: Debug Subtest At Cursor","description":"Debug a sub test at the cursor."},{"command":"go.benchmark.cursor","title":"Go: Benchmark Function At Cursor","description":"Runs a benchmark at the cursor."},{"command":"go.debug.cursor","title":"Go: Debug Test At Cursor","description":"Debug test at the cursor."},{"command":"go.test.file","title":"Go: Test File","description":"Runs all unit tests in the current file."},{"command":"go.test.package","title":"Go: Test Package","description":"Runs all unit tests in the package of the current file."},{"command":"go.test.refresh","title":"Go Test: Refresh","description":"Refresh a test in the test explorer. Only available as a context menu option in the test explorer.","category":"Test","icon":"$(refresh)"},{"command":"go.test.showProfiles","title":"Go Test: Show Last Profile","description":"Show last captured profile","category":"Test"},{"command":"go.test.captureProfile","title":"Go Test: Profile","description":"Run a test and capture a profile","category":"Test"},{"command":"go.test.deleteProfile","title":"Go Test: Delete Profile","shortTitle":"Delete","description":"Delete selected profile","category":"Test"},{"command":"go.test.showProfileFile","title":"Go: Show pprof file","description":"Internal use. Open a pprof profile file."},{"command":"go.benchmark.package","title":"Go: Benchmark Package","description":"Runs all benchmarks in the package of the current file."},{"command":"go.benchmark.file","title":"Go: Benchmark File","description":"Runs all benchmarks in the current file."},{"command":"go.test.workspace","title":"Go: Test All Packages In Workspace","description":"Runs all unit tests from all packages in the current workspace."},{"command":"go.test.previous","title":"Go: Test Previous","description":"Re-runs the last executed test."},{"command":"go.debug.previous","title":"Go: Debug Previous","description":"Re-runs the last debugged test run through a codelens or \"Go: Debug Test at Cursor\" command."},{"command":"go.test.coverage","title":"Go: Toggle Test Coverage In Current Package","description":"Displays test coverage in the current package."},{"command":"go.test.generate.package","title":"Go: Generate Unit Tests For Package","description":"Generates unit tests for the current package"},{"command":"go.test.generate.file","title":"Go: Generate Unit Tests For File","description":"Generates unit tests for the current file"},{"command":"go.test.generate.function","title":"Go: Generate Unit Tests For Function","description":"Generates unit tests for the selected function in the current file"},{"command":"go.impl.cursor","title":"Go: Generate Interface Stubs","description":"Generates method stub for implementing the provided interface and inserts at the cursor."},{"command":"go.extractServerChannel","title":"Go: Extract Language Server Logs To Editor","description":"Extract logs in the `gopls (server)` output channel to the editor."},{"command":"go.welcome","title":"Go: Welcome","description":"Open the welcome page for the Go extension."},{"command":"go.toggle.gc_details","title":"Go: Toggle gc details","description":"Toggle the display of compiler optimization choices"},{"command":"go.import.add","title":"Go: Add Import","description":"Add an import declaration"},{"command":"go.add.package.workspace","title":"Go: Add Package to Workspace","description":"Add a package from the imports list to the workspace."},{"command":"go.tools.install","title":"Go: Install/Update Tools","description":"install/update the required go packages"},{"command":"go.toggle.test.file","title":"Go: Toggle Test File","description":"Toggles between file in current active editor and the corresponding test file."},{"command":"go.vulncheck.toggle","title":"Go: Toggle Vulncheck","description":"Toggle the display of vulnerability analysis in dependencies."},{"command":"go.add.tags","title":"Go: Add Tags To Struct Fields","description":"Add tags configured in go.addTags setting to selected struct using gomodifytags"},{"command":"go.remove.tags","title":"Go: Remove Tags From Struct Fields","description":"Remove tags configured in go.removeTags setting from selected struct using gomodifytags"},{"command":"go.fill.struct","title":"Go: Fill struct","description":"Fill a struct literal with default values"},{"command":"go.show.commands","title":"Go: Show All Commands...","description":"Shows all commands from the Go extension in the quick pick"},{"command":"go.browse.packages","title":"Go: Browse Packages","description":"Browse packages and Go files inside the packages."},{"command":"go.get.package","title":"Go: Get Package","description":"Run `go get -v` on the package on the current line."},{"command":"go.playground","title":"Go: Run on Go Playground","description":"Upload the current selection or file to the Go Playground"},{"command":"go.lint.package","title":"Go: Lint Current Package","description":"Run linter in the package of the current file."},{"command":"go.lint.workspace","title":"Go: Lint Workspace","description":"Run linter in the current workspace."},{"command":"go.vet.package","title":"Go: Vet Current Package","description":"Run go vet in the package of the current file."},{"command":"go.vet.workspace","title":"Go: Vet Workspace","description":"Run go vet in the current workspace."},{"command":"go.build.package","title":"Go: Build Current Package","description":"Build the package of the current file."},{"command":"go.build.workspace","title":"Go: Build Workspace","description":"Build the current workspace."},{"command":"go.install.package","title":"Go: Install Current Package","description":"Install the current package."},{"command":"go.run.modinit","title":"Go: Initialize go.mod","description":"Run `go mod init` in the workspace folder."},{"command":"go.test.cancel","title":"Go: Cancel Running Tests","description":"Cancels running tests."},{"command":"go.apply.coverprofile","title":"Go: Apply Cover Profile","description":"Applies existing cover profile."},{"command":"go.godoctor.extract","title":"Go: Extract to function","description":"Extract to function using godoctor."},{"command":"go.godoctor.var","title":"Go: Extract to variable","description":"Extract to variable using godoctor."},{"command":"go.languageserver.restart","title":"Go: Restart Language Server","description":"Restart the running instance of the language server"},{"command":"go.environment.choose","title":"Go: Choose Go Environment","description":"Choose a different Go version or binary for this project. (WIP)"},{"command":"go.survey.showConfig","title":"Go: Show Survey Configuration","description":"Show the current Go survey configuration"},{"command":"go.survey.resetConfig","title":"Go: Reset Survey Configuration","description":"Reset the current Go survey configuration history"},{"command":"go.workspace.resetState","title":"Go: Reset Workspace State","description":"Reset keys in workspace state to undefined."},{"command":"go.global.resetState","title":"Go: Reset Global State","description":"Reset keys in global state to undefined."},{"command":"go.explorer.refresh","title":"Go Explorer: Refresh","description":"Refresh the Go explorer. Only available as a menu item in the explorer.","category":"Explorer","icon":"$(refresh)"},{"command":"go.explorer.open","title":"Go Explorer: Open File","description":"Open a file from the Go explorer. Only available as a menu item in the explorer.","category":"Explorer","icon":"$(go-to-file)"},{"command":"go.workspace.editEnv","title":"Go: Edit Workspace Env","description":"Edit the Go Env for the active workspace.","icon":"$(settings-edit)","enablement":"workspaceFolderCount > 0"},{"command":"go.workspace.resetEnv","title":"Go: Reset Workspace Env","description":"Reset the Go Env for the active workspace.","icon":"$(settings-remove)","enablement":"workspaceFolderCount > 0"}],"breakpoints":[{"language":"go"}],"debuggers":[{"type":"go","label":"Go","program":"./dist/debugAdapter.js","runtime":"node","languages":["go"],"variables":{"pickProcess":"go.debug.pickProcess","pickGoProcess":"go.debug.pickGoProcess"},"configurationSnippets":[{"label":"Go: Launch package","description":"Debug/test the package in the program attribute","body":{"name":"${2:Launch Package}","type":"go","request":"launch","mode":"auto","program":"^\"\\${fileDirname}${1:}\""}},{"label":"Go: Launch file","description":"Debug the file in the program attribute","body":{"name":"${2:Launch file}","type":"go","request":"launch","mode":"debug","program":"^\"${1:\\${file\\}}\""}},{"label":"Go: Launch test function","description":"Debug the test function in the args, ensure program attributes points to right package","body":{"name":"${3:Launch test function}","type":"go","request":"launch","mode":"test","program":"^\"\\${workspaceFolder}${1:}\"","args":["-test.run","${2:MyTestFunction}"]}},{"label":"Go: Attach to local process","description":"Attach to an existing process by process ID","body":{"name":"${1:Attach to Process}","type":"go","request":"attach","mode":"local","processId":0}},{"label":"Go: Connect to server","description":"Connect to a remote headless debug server","body":{"name":"${1:Connect to server}","type":"go","request":"attach","mode":"remote","remotePath":"^\"\\${workspaceFolder}\"","port":2345,"host":"127.0.0.1"}}],"configurationAttributes":{"launch":{"required":[],"properties":{"debugAdapter":{"enum":["legacy","dlv-dap"],"description":"Select which debug adapter to use with this launch configuration.","default":"dlv-dap"},"program":{"type":"string","description":"Path to the program folder (or any go file within that folder) when in `debug` or `test` mode, and to the pre-built binary file to debug in `exec` mode. If it is not an absolute path, the extension interpretes it as a workspace relative path.","default":"${workspaceFolder}"},"mode":{"enum":["auto","debug","test","exec","replay","core"],"description":"One of `auto`, `debug`, `test`, `exec`, `replay`, `core`. In `auto` mode, the extension will choose either `debug` or `test` depending on active editor window.","default":"auto"},"traceDirPath":{"type":"string","description":"Directory in which the record trace is located or to be created for a new output trace. For use on 'replay' mode only","default":""},"coreFilePath":{"type":"string","description":"Path to the core dump file to open. For use on 'core' mode only","default":""},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":false},"args":{"type":"array","description":"Command line arguments passed to the debugged program.","items":{"type":"string"},"default":[]},"showLog":{"type":"boolean","description":"Show log output from the delve debugger. Maps to dlv's `--log` flag.","default":false},"cwd":{"type":"string","description":"Workspace relative or absolute path to the working directory of the program being debugged if a non-empty value is specified. The `program` folder is used as the working directory if `cwd` is omitted or empty.","default":""},"env":{"type":"object","description":"Environment variables passed to the launched debuggee program. Format as string key:value pairs. Merged with `envFile` and `go.toolsEnvVars` with precedence `env` > `envFile` > `go.toolsEnvVars`.","default":{}},"substitutePath":{"type":"array","items":{"type":"object","properties":{"from":{"type":"string","description":"The absolute local path to be replaced when passing paths to the debugger.","default":""},"to":{"type":"string","description":"The absolute remote path to be replaced when passing paths back to the client.","default":""}}},"description":"An array of mappings from a local path (editor) to the remote path (debugee). This setting is useful when working in a file system with symbolic links, running remote debugging, or debugging an executable compiled externally. The debug adapter will replace the local path with the remote path in all of the calls.","default":[]},"buildFlags":{"type":"string","description":"Build flags, to be passed to the Go compiler. Maps to dlv's `--build-flags` flag.","default":""},"dlvFlags":{"type":"array","description":"Extra flags for `dlv`. See `dlv help` for the full list of supported. Flags such as `--log-output`, `--log`, `--log-dest`, `--api-version`, `--output`, `--backend` already have corresponding properties in the debug configuration, and flags such as `--listen` and `--headless` are used internally. If they are specified in `dlvFlags`, they may be ignored or cause an error.","items":{"type":"string"},"default":[]},"port":{"type":"number","description":"When applied to remote-attach configurations, will look for \"dlv ... --headless --listen=<host>:<port>\" server started externally. In dlv-dap mode this will apply to all other configurations as well. The extension will try to connect to an external server started with \"dlv dap --listen=<host>:<port>\" to ask it to launch/attach to the target process.","default":2345},"host":{"type":"string","description":"When applied to remote-attach configurations, will look for \"dlv ... --headless --listen=<host>:<port>\" server started externally. In dlv-dap mode this will apply to all other configurations as well. The extension will try to connect to an external server started with \"dlv dap --listen=<host>:<port>\" to ask it to launch/attach to the target process.","default":"127.0.0.1"},"trace":{"type":"string","enum":["verbose","trace","log","info","warn","error"],"default":"error","description":"Various levels of logging shown in the debug console & 'Go Debug' output channel. When using the `legacy` debug adapter, the logs will also be written to a file if it is set to a value other than `error`."},"envFile":{"type":["string","array"],"items":{"type":"string"},"description":"Absolute path to a file containing environment variable definitions, formatted as string key=value pairs. Multiple files can be specified by provided an array of absolute paths. Merged with `env` and `go.toolsEnvVars` with precedence `env` > `envFile` > `go.toolsEnvVars`. ","default":""},"backend":{"type":"string","enum":["default","native","lldb","rr"],"description":"Backend used by delve. Maps to `dlv`'s `--backend` flag."},"output":{"type":"string","description":"Output path for the binary of the debugee.","default":"debug"},"logOutput":{"type":"string","enum":["debugger","gdbwire","lldbout","debuglineerr","rpc","dap"],"description":"Comma separated list of components that should produce debug output. Maps to dlv's `--log-output` flag. Check `dlv log` for details.","default":"debugger"},"logDest":{"type":"string","description":"dlv's `--log-dest` flag. See `dlv log` for details. Number argument is not allowed. Supported only in `dlv-dap` mode, and on Linux and Mac OS."},"dlvLoadConfig":{"type":"object","properties":{"followPointers":{"type":"boolean","description":"FollowPointers requests pointers to be automatically dereferenced.","default":true},"maxVariableRecurse":{"type":"number","description":"MaxVariableRecurse is how far to recurse when evaluating nested types.","default":1},"maxStringLen":{"type":"number","description":"MaxStringLen is the maximum number of bytes read from a string.","default":64},"maxArrayValues":{"type":"number","description":"MaxArrayValues is the maximum number of elements read from an array, a slice or a map.","default":64},"maxStructFields":{"type":"number","description":"MaxStructFields is the maximum number of fields read from a struct, -1 will read all fields.","default":-1}},"description":"LoadConfig describes to delve, how to load values from target's memory. Not applicable when using `dlv-dap` mode.","default":{"followPointers":true,"maxVariableRecurse":1,"maxStringLen":64,"maxArrayValues":64,"maxStructFields":-1}},"apiVersion":{"type":"number","enum":[1,2],"description":"Delve Api Version to use. Default value is 2. Maps to dlv's `--api-version` flag. Not applicable when using `dlv-dap` mode.","default":2},"stackTraceDepth":{"type":"number","description":"Maximum depth of stack trace collected from Delve.","default":50},"showGlobalVariables":{"type":"boolean","default":false,"description":"Boolean value to indicate whether global package variables should be shown in the variables pane or not."},"showRegisters":{"type":"boolean","default":false,"description":"Boolean value to indicate whether register variables should be shown in the variables pane or not."},"hideSystemGoroutines":{"type":"boolean","default":false,"description":"Boolean value to indicate whether system goroutines should be hidden from call stack view."},"console":{"default":"internalConsole","description":"(Experimental) Where to launch the debugger and the debug target: internal console, integrated terminal, or external terminal. It is ignored in remote debugging.","enum":["internalConsole","integratedTerminal","externalTerminal"]},"asRoot":{"default":false,"description":"(Experimental) Debug with elevated permissions (on Unix). It requires `integrated` or `external` console modes and is ignored in remote debugging.","type":"boolean"}}},"attach":{"required":[],"properties":{"debugAdapter":{"enum":["legacy","dlv-dap"],"description":"Select which debug adapter to use with this launch configuration.","default":"dlv-dap"},"processId":{"anyOf":[{"enum":["${command:pickProcess}","${command:pickGoProcess}"],"description":"Use process picker to select a process to attach, or Process ID as integer."},{"type":"string","description":"Attach to a process by name. If more than one process matches the name, use the process picker to select a process."},{"type":"number","description":"The numeric ID of the process to be debugged. If 0, use the process picker to select a process."}],"default":0},"mode":{"enum":["local","remote"],"description":"Indicates local or remote debugging. Local is similar to the `dlv attach` command, remote - to `dlv connect`","default":"local"},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after attach.","default":false},"dlvFlags":{"type":"array","description":"Extra flags for `dlv`. See `dlv help` for the full list of supported. Flags such as `--log-output`, `--log`, `--log-dest`, `--api-version`, `--output`, `--backend` already have corresponding properties in the debug configuration, and flags such as `--listen` and `--headless` are used internally. If they are specified in `dlvFlags`, they may be ignored or cause an error.","items":{"type":"string"},"default":[]},"showLog":{"type":"boolean","description":"Show log output from the delve debugger. Maps to dlv's `--log` flag.","default":false},"cwd":{"type":"string","description":"Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"remotePath":{"type":"string","description":"The path to the source code on the remote machine, when the remote path is different from the local machine. If specified, becomes the first entry in substitutePath. Not supported with `dlv-dap`.","markdownDeprecationMessage":"Use `substitutePath` instead.","default":""},"port":{"type":"number","description":"When applied to remote-attach configurations, will look for \"dlv ... --headless --listen=<host>:<port>\" server started externally. In dlv-dap mode, this will apply to all other configurations as well. The extension will try to connect to an external server started with \"dlv dap --listen=<host>:<port>\" to ask it to launch/attach to the target process.","default":2345},"host":{"type":"string","description":"When applied to remote-attach configurations, will look for \"dlv ... --headless --listen=<host>:<port>\" server started externally. In dlv-dap mode, this will apply to all other configurations as well. The extension will try to connect to an external server started with \"dlv dap --listen=<host>:<port>\" to ask it to launch/attach to the target process.","default":"127.0.0.1"},"substitutePath":{"type":"array","items":{"type":"object","properties":{"from":{"type":"string","description":"The absolute local path to be replaced when passing paths to the debugger.","default":""},"to":{"type":"string","description":"The absolute remote path to be replaced when passing paths back to the client.","default":""}}},"description":"An array of mappings from a local path (editor) to the remote path (debugee). This setting is useful when working in a file system with symbolic links, running remote debugging, or debugging an executable compiled externally. The debug adapter will replace the local path with the remote path in all of the calls.  Overriden by `remotePath`.","default":[]},"trace":{"type":"string","enum":["verbose","trace","log","info","warn","error"],"default":"error","description":"Various levels of logging shown in the debug console & 'Go Debug' output channel. When using the `legacy` debug adapter, the logs will also be written to a file if it is set to a value other than `error`."},"backend":{"type":"string","enum":["default","native","lldb","rr"],"description":"Backend used by delve. Maps to `dlv`'s `--backend` flag."},"logOutput":{"type":"string","enum":["debugger","gdbwire","lldbout","debuglineerr","rpc","dap"],"description":"Comma separated list of components that should produce debug output. Maps to dlv's `--log-output` flag. Check `dlv log` for details.","default":"debugger"},"logDest":{"type":"string","description":"dlv's `--log-dest` flag. See `dlv log` for details. Number argument is not allowed. Supported only in `dlv-dap` mode and on Linux and Mac OS."},"dlvLoadConfig":{"type":"object","properties":{"followPointers":{"type":"boolean","description":"FollowPointers requests pointers to be automatically dereferenced","default":true},"maxVariableRecurse":{"type":"number","description":"MaxVariableRecurse is how far to recurse when evaluating nested types","default":1},"maxStringLen":{"type":"number","description":"MaxStringLen is the maximum number of bytes read from a string","default":64},"maxArrayValues":{"type":"number","description":"MaxArrayValues is the maximum number of elements read from an array, a slice or a map","default":64},"maxStructFields":{"type":"number","description":"MaxStructFields is the maximum number of fields read from a struct, -1 will read all fields","default":-1}},"description":"LoadConfig describes to delve, how to load values from target's memory. Not applicable when using `dlv-dap` mode.","default":{"followPointers":true,"maxVariableRecurse":1,"maxStringLen":64,"maxArrayValues":64,"maxStructFields":-1}},"apiVersion":{"type":"number","enum":[1,2],"description":"Delve Api Version to use. Default value is 2. Not applicable when using `dlv-dap` mode.","default":2},"stackTraceDepth":{"type":"number","description":"Maximum depth of stack trace collected from Delve.","default":50},"showGlobalVariables":{"type":"boolean","default":false,"description":"Boolean value to indicate whether global package variables should be shown in the variables pane or not."},"showRegisters":{"type":"boolean","default":false,"description":"Boolean value to indicate whether register variables should be shown in the variables pane or not."},"hideSystemGoroutines":{"type":"boolean","default":false,"description":"Boolean value to indicate whether system goroutines should be hidden from call stack view."},"console":{"default":"internalConsole","description":"(Experimental) Where to launch the debugger: internal console, integrated terminal, or external terminal. This does not affect tty of the running program. It is ignored in remote debugging.","enum":["internalConsole","integratedTerminal","externalTerminal"]},"asRoot":{"default":false,"description":"(Experimental) Debug with elevated permissions (on Unix). This requires `integrated` or `external` console modes and is ignored in remote debugging.","type":"boolean"}}}}}],"configuration":{"type":"object","title":"Go","properties":{"go.buildOnSave":{"type":"string","enum":["package","workspace","off"],"default":"package","description":"Compiles code on file save using 'go build' or 'go test -c'. Options are 'workspace', 'package', or 'off'.  Not applicable when using the language server's diagnostics. See 'go.languageServerExperimentalFeatures.diagnostics' setting.","scope":"resource"},"go.buildFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to `go build`/`go test` used during build-on-save or running tests. (e.g. [\"-ldflags='-s'\"]) This is propagated to the language server if `gopls.build.buildFlags` is not specified.","scope":"resource"},"go.buildTags":{"type":"string","default":"","description":"The Go build tags to use for all commands, that support a `-tags '...'` argument. When running tests, go.testTags will be used instead if it was set. This is propagated to the language server if `gopls.build.buildFlags` is not specified.","scope":"resource"},"go.testTags":{"type":["string","null"],"default":null,"description":"The Go build tags to use for when running tests. If null, then buildTags will be used.","scope":"resource"},"go.disableConcurrentTests":{"type":"boolean","default":false,"description":"If true, tests will not run concurrently. When a new test run is started, the previous will be cancelled.","scope":"resource"},"go.installDependenciesWhenBuilding":{"type":"boolean","default":false,"description":"If true, then `-i` flag will be passed to `go build` everytime the code is compiled. Since Go 1.10, setting this may be unnecessary unless you are in GOPATH mode and do not use the language server.","scope":"resource"},"go.lintOnSave":{"type":"string","enum":["file","package","workspace","off"],"enumDescriptions":["lint the current file on file saving","lint the current package on file saving","lint all the packages in the current workspace root folder on file saving","do not run lint automatically"],"default":"package","description":"Lints code on file save using the configured Lint tool. Options are 'file', 'package', 'workspace' or 'off'.","scope":"resource"},"go.lintTool":{"type":"string","default":"staticcheck","description":"Specifies Lint tool name.","scope":"resource","enum":["staticcheck","golint","golangci-lint","revive"]},"go.lintFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to pass to Lint tool (e.g. [\"-min_confidence=.8\"])","scope":"resource"},"go.vetOnSave":{"type":"string","enum":["package","workspace","off"],"enumDescriptions":["vet the current package on file saving","vet all the packages in the current workspace root folder on file saving","do not run vet automatically"],"default":"package","description":"Vets code on file save using 'go tool vet'. Not applicable when using the language server's diagnostics. See 'go.languageServerExperimentalFeatures.diagnostics' setting.","scope":"resource"},"go.vetFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to pass to `go tool vet` (e.g. [\"-all\", \"-shadow\"])","scope":"resource"},"go.formatTool":{"type":"string","default":"default","markdownDescription":"When the language server is enabled and one of `default`/`gofmt`/`goimports`/`gofumpt` is chosen, the language server will handle formatting. If `custom` tool is selected, the extension will use the `customFormatter` tool in the `#go.alternateTools#` section.","scope":"resource","enum":["default","gofmt","goimports","goformat","gofumpt","custom"],"markdownEnumDescriptions":["If the language server is enabled, format via the language server, which already supports gofmt, goimports, goreturns, and gofumpt. Otherwise, goimports.","Formats the file according to the standard Go style. (not applicable when the language server is enabled)","Organizes imports and formats the file with gofmt. (not applicable when the language server is enabled)","Configurable gofmt, see https://github.com/mbenkmann/goformat.","Stricter version of gofmt, see https://github.com/mvdan/gofumpt. . Use `#gopls.format.gofumpt#` instead)","Formats using the custom tool specified as `customFormatter` in the `#go.alternateTools#` setting. The tool should take the input as STDIN and output the formatted code as STDOUT."]},"go.formatFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to pass to format tool (e.g. [\"-s\"]). Not applicable when using the language server.","scope":"resource"},"go.inferGopath":{"type":"boolean","default":false,"description":"Infer GOPATH from the workspace root. This is ignored when using Go Modules.","scope":"resource"},"go.gopath":{"type":["string","null"],"default":null,"description":"Specify GOPATH here to override the one that is set as environment variable. The inferred GOPATH from workspace root overrides this, if go.inferGopath is set to true.","scope":"machine-overridable"},"go.toolsGopath":{"type":["string","null"],"default":null,"description":"Location to install the Go tools that the extension depends on if you don't want them in your GOPATH.","scope":"machine-overridable"},"go.goroot":{"type":["string","null"],"default":null,"description":"Specifies the GOROOT to use when no environment variable is set.","scope":"machine-overridable"},"go.testOnSave":{"type":"boolean","default":false,"description":"Run 'go test' on save for current package. It is not advised to set this to `true` when you have Auto Save enabled.","scope":"resource"},"go.coverOnSave":{"type":"boolean","default":false,"description":"If true, runs 'go test -coverprofile' on save and shows test coverage.","scope":"resource"},"go.coverOnTestPackage":{"type":"boolean","default":true,"description":"If true, shows test coverage when Go: Test Package command is run."},"go.coverOnSingleTest":{"type":"boolean","default":false,"description":"If true, shows test coverage when Go: Test Function at cursor command is run."},"go.coverOnSingleTestFile":{"type":"boolean","default":false,"description":"If true, shows test coverage when Go: Test Single File command is run."},"go.coverMode":{"type":"string","enum":["default","set","count","atomic"],"default":"default","description":"When generating code coverage, the value for -covermode. 'default' is the default value chosen by the 'go test' command.","scope":"resource"},"go.coverShowCounts":{"type":"boolean","default":false,"description":"When generating code coverage, should counts be shown as --374--","scope":"resource"},"go.coverageOptions":{"type":"string","enum":["showCoveredCodeOnly","showUncoveredCodeOnly","showBothCoveredAndUncoveredCode"],"default":"showBothCoveredAndUncoveredCode","description":"Use these options to control whether only covered or only uncovered code or both should be highlighted after running test coverage","scope":"resource"},"go.coverageDecorator":{"type":"object","properties":{"type":{"type":"string","enum":["highlight","gutter"]},"coveredHighlightColor":{"type":"string","description":"Color in the rgba format to use to highlight covered code."},"uncoveredHighlightColor":{"type":"string","description":"Color in the rgba format to use to highlight uncovered code."},"coveredBorderColor":{"type":"string","description":"Color to use for the border of covered code."},"uncoveredBorderColor":{"type":"string","description":"Color to use for the border of uncovered code."},"coveredGutterStyle":{"type":"string","enum":["blockblue","blockred","blockgreen","blockyellow","slashred","slashgreen","slashblue","slashyellow","verticalred","verticalgreen","verticalblue","verticalyellow"],"description":"Gutter style to indicate covered code."},"uncoveredGutterStyle":{"type":"string","enum":["blockblue","blockred","blockgreen","blockyellow","slashred","slashgreen","slashblue","slashyellow","verticalred","verticalgreen","verticalblue","verticalyellow"],"description":"Gutter style to indicate covered code."}},"additionalProperties":false,"default":{"type":"highlight","coveredHighlightColor":"rgba(64,128,128,0.5)","uncoveredHighlightColor":"rgba(128,64,64,0.25)","coveredBorderColor":"rgba(64,128,128,0.5)","uncoveredBorderColor":"rgba(128,64,64,0.25)","coveredGutterStyle":"blockblue","uncoveredGutterStyle":"slashyellow"},"description":"This option lets you choose the way to display code coverage. Choose either to highlight the complete line or to show a decorator in the gutter. You can customize the colors and borders for the former and the style for the latter.","scope":"resource"},"go.testTimeout":{"type":"string","default":"30s","description":"Specifies the timeout for go test in ParseDuration format.","scope":"resource"},"go.testEnvVars":{"type":"object","default":{},"description":"Environment variables that will be passed to the process that runs the Go tests","scope":"resource"},"go.testEnvFile":{"type":"string","default":null,"description":"Absolute path to a file containing environment variables definitions. File contents should be of the form key=value.","scope":"resource"},"go.testFlags":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"Flags to pass to `go test`. If null, then buildFlags will be used. This is not propagated to the language server.","scope":"resource"},"go.testExplorer.enable":{"type":"boolean","default":true,"scope":"window","description":"Enable the Go test explorer"},"go.testExplorer.packageDisplayMode":{"type":"string","enum":["flat","nested"],"default":"flat","description":"Present packages in the test explorer flat or nested.","scope":"resource"},"go.testExplorer.alwaysRunBenchmarks":{"type":"boolean","default":false,"description":"Run benchmarks when running all tests in a file or folder.","scope":"resource"},"go.testExplorer.concatenateMessages":{"type":"boolean","default":true,"description":"Concatenate all test log messages for a given location into a single message.","scope":"resource"},"go.testExplorer.showDynamicSubtestsInEditor":{"type":"boolean","default":false,"description":"Set the source location of dynamically discovered subtests to the location of the containing function. As a result, dynamically discovered subtests will be added to the gutter test widget of the containing function.","scope":"resource"},"go.testExplorer.showOutput":{"type":"boolean","default":true,"description":"Open the test output terminal when a test run is started.","scope":"window"},"go.generateTestsFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Additional command line flags to pass to `gotests` for generating tests.","scope":"resource"},"go.toolsEnvVars":{"type":"object","default":{},"description":"Environment variables that will be passed to the tools that run the Go tools (e.g. CGO_CFLAGS) and debuggee process launched by Delve. Format as string key:value pairs. When debugging, merged with `envFile` and `env` values with precedence `env` > `envFile` > `go.toolsEnvVars`.","scope":"resource"},"go.gocodeFlags":{"type":"array","items":{"type":"string"},"default":["-builtin","-ignore-case","-unimported-packages"],"description":"Additional flags to pass to gocode. Not applicable when using the language server.","scope":"resource"},"go.gocodeAutoBuild":{"type":"boolean","default":false,"description":"Enable gocode's autobuild feature. Not applicable when using the language server.","scope":"resource"},"go.gocodePackageLookupMode":{"type":"string","enum":["go","gb","bzl"],"default":"go","description":"Used to determine the Go package lookup rules for completions by gocode. Only applies when using nsf/gocode. Latest versions of the Go extension uses mdempsky/gocode by default. Not applicable when using the language server.","scope":"resource"},"go.useCodeSnippetsOnFunctionSuggest":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature, including the variable type. Not propagated to the language server.","scope":"resource"},"go.useCodeSnippetsOnFunctionSuggestWithoutType":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature, excluding the variable types. Use `gopls.usePlaceholders` when using the language server.","scope":"resource"},"go.autocompleteUnimportedPackages":{"type":"boolean","default":false,"description":"Include unimported packages in auto-complete suggestions. Not applicable when using the language server.","scope":"resource"},"go.docsTool":{"type":"string","default":"godoc","description":"Pick 'godoc' or 'gogetdoc' to get documentation. Not applicable when using the language server.","scope":"resource","enum":["godoc","gogetdoc","guru"]},"go.useLanguageServer":{"type":"boolean","default":true,"description":"Use the Go language server \"gopls\" from Google for powering language features like code navigation, completion, refactoring, formatting & diagnostics."},"go.languageServerFlags":{"type":"array","default":[],"description":"Flags like -rpc.trace and -logfile to be used while running the language server."},"go.languageServerExperimentalFeatures":{"type":"object","properties":{"diagnostics":{"type":"boolean","default":true,"description":"If true, the language server will provide build, vet errors and the extension will ignore the `buildOnSave`, `vetOnSave` settings."}},"additionalProperties":false,"default":{"diagnostics":true},"markdownDescription":"Temporary flag to enable/disable diagnostics from the language server. This setting will be deprecated soon. Please see and response to [Issue 50](https://github.com/golang/vscode-go/issues/50)."},"go.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Trace the communication between VS Code and the Go language server."},"go.logging.level":{"type":"string","default":"error","enum":["off","error","info","verbose"],"description":"The logging level the extension logs at, defaults to 'error'","scope":"machine-overridable"},"go.toolsManagement.go":{"type":"string","default":"","description":"The path to the `go` binary used to install the Go tools. If it's empty, the same `go` binary chosen for the project will be used for tool installation.","scope":"machine-overridable"},"go.toolsManagement.checkForUpdates":{"type":"string","default":"proxy","enum":["proxy","local","off"],"enumDescriptions":["keeps notified of new releases by checking the Go module proxy (GOPROXY)","checks only the minimum tools versions required by the extension","completely disables version check (not recommended)"],"markdownDescription":"Specify whether to prompt about new versions of Go and the Go tools (currently, only `gopls`) the extension depends on"},"go.toolsManagement.autoUpdate":{"type":"boolean","default":false,"description":"Automatically update the tools used by the extension, without prompting the user.","scope":"resource"},"go.useGoProxyToCheckForToolUpdates":{"type":"boolean","default":true,"description":"When enabled, the extension automatically checks the Go proxy if there are updates available for Go and the Go tools (at present, only gopls) it depends on and prompts the user accordingly","markdownDeprecationMessage":"Use `go.toolsManagement.checkForUpdates` instead."},"go.gotoSymbol.includeImports":{"type":"boolean","default":false,"description":"If false, the import statements will be excluded while using the Go to Symbol in File feature. Not applicable when using the language server.","scope":"resource"},"go.gotoSymbol.includeGoroot":{"type":"boolean","default":false,"description":"If false, the standard library located at $GOROOT will be excluded while using the Go to Symbol in File feature. Not applicable when using the language server.","scope":"resource"},"go.enableCodeLens":{"type":"object","properties":{"runtest":{"type":"boolean","default":true,"description":"If true, enables code lens for running and debugging tests"}},"additionalProperties":false,"default":{"runtest":true},"description":"Feature level setting to enable/disable code lens for references and run/debug tests","scope":"resource"},"go.addTags":{"type":"object","properties":{"promptForTags":{"type":"boolean","default":false,"description":"If true, Go: Add Tags command will prompt the user to provide tags, options, transform values instead of using the configured values"},"tags":{"type":"string","default":"json","description":"Comma separated tags to be used by Go: Add Tags command"},"options":{"type":"string","default":"json=omitempty","description":"Comma separated tag=options pairs to be used by Go: Add Tags command"},"transform":{"type":"string","enum":["snakecase","camelcase","lispcase","pascalcase","keep"],"default":"snakecase","description":"Transformation rule used by Go: Add Tags command to add tags"},"template":{"type":"string","default":"","description":"Custom format used by Go: Add Tags command for the tag value to be applied"}},"additionalProperties":false,"default":{"tags":"json","options":"json=omitempty","promptForTags":false,"transform":"snakecase","template":""},"description":"Tags and options configured here will be used by the Add Tags command to add tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, json tags are added.","scope":"resource"},"go.liveErrors":{"type":"object","properties":{"enabled":{"type":"boolean","default":false,"description":"If true, runs gotype on the file currently being edited and reports any semantic or syntactic errors found. Disabled when the language server is enabled."},"delay":{"type":"number","default":500,"description":"The number of milliseconds to delay before execution. Resets with each keystroke."}},"additionalProperties":false,"default":{"enabled":false,"delay":500},"description":"Use gotype on the file currently being edited and report any semantic or syntactic errors found after configured delay. Not applicable when using the language server.","scope":"resource"},"go.removeTags":{"type":"object","properties":{"promptForTags":{"type":"boolean","default":false,"description":"If true, Go: Remove Tags command will prompt the user to provide tags and options instead of using the configured values"},"tags":{"type":"string","default":"json","description":"Comma separated tags to be used by Go: Remove Tags command"},"options":{"type":"string","default":"json=omitempty","description":"Comma separated tag=options pairs to be used by Go: Remove Tags command"}},"additionalProperties":false,"default":{"tags":"","options":"","promptForTags":false},"description":"Tags and options configured here will be used by the Remove Tags command to remove tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, all tags and options will be removed.","scope":"resource"},"go.playground":{"type":"object","properties":{"openbrowser":{"type":"boolean","default":true,"description":"Whether to open the created Go Playground in the default browser"},"share":{"type":"boolean","default":true,"description":"Whether to make the created Go Playground shareable"},"run":{"type":"boolean","default":true,"description":"Whether to run the created Go Playground after creation"}},"description":"The flags configured here will be passed through to command `goplay`","additionalProperties":false,"default":{"openbrowser":true,"share":true,"run":true}},"go.survey.prompt":{"type":"boolean","default":true,"description":"Prompt for surveys, including the gopls survey and the Go developer survey."},"go.editorContextMenuCommands":{"type":"object","properties":{"toggleTestFile":{"type":"boolean","default":true,"description":"If true, adds command to toggle between a Go file and its test file to the editor context menu"},"addTags":{"type":"boolean","default":true,"description":"If true, adds command to add configured tags from struct fields to the editor context menu"},"removeTags":{"type":"boolean","default":true,"description":"If true, adds command to remove configured tags from struct fields to the editor context menu"},"fillStruct":{"type":"boolean","default":true,"description":"If true, adds command to fill struct literal with default values to the editor context menu"},"testAtCursor":{"type":"boolean","default":false,"description":"If true, adds command to run the test under the cursor to the editor context menu"},"testFile":{"type":"boolean","default":true,"description":"If true, adds command to run all tests in the current file to the editor context menu"},"testPackage":{"type":"boolean","default":true,"description":"If true, adds command to run all tests in the current package to the editor context menu"},"generateTestForFunction":{"type":"boolean","default":true,"description":"If true, adds command to generate unit tests for function under the cursor to the editor context menu"},"generateTestForFile":{"type":"boolean","default":true,"description":"If true, adds command to generate unit tests for current file to the editor context menu"},"generateTestForPackage":{"type":"boolean","default":true,"description":"If true, adds command to generate unit tests for current package to the editor context menu"},"addImport":{"type":"boolean","default":true,"description":"If true, adds command to import a package to the editor context menu"},"testCoverage":{"type":"boolean","default":true,"description":"If true, adds command to run test coverage to the editor context menu"},"playground":{"type":"boolean","default":true,"description":"If true, adds command to upload the current file or selection to the Go Playground"},"debugTestAtCursor":{"type":"boolean","default":false,"description":"If true, adds command to debug the test under the cursor to the editor context menu"},"benchmarkAtCursor":{"type":"boolean","default":false,"description":"If true, adds command to benchmark the test under the cursor to the editor context menu"}},"additionalProperties":false,"default":{"toggleTestFile":true,"addTags":true,"removeTags":false,"fillStruct":false,"testAtCursor":true,"testFile":false,"testPackage":false,"generateTestForFunction":true,"generateTestForFile":false,"generateTestForPackage":false,"addImport":true,"testCoverage":true,"playground":true,"debugTestAtCursor":true,"benchmarkAtCursor":false},"description":"Experimental Feature: Enable/Disable entries from the context menu in the editor.","scope":"resource"},"go.gotoSymbol.ignoreFolders":{"type":"array","items":{"type":"string"},"default":[],"description":"Folder names (not paths) to ignore while using Go to Symbol in Workspace feature. Not applicable when using the language server.","scope":"resource"},"go.delveConfig":{"type":"object","properties":{"dlvLoadConfig":{"type":"object","properties":{"followPointers":{"type":"boolean","description":"FollowPointers requests pointers to be automatically dereferenced","default":true},"maxVariableRecurse":{"type":"number","description":"MaxVariableRecurse is how far to recurse when evaluating nested types","default":1},"maxStringLen":{"type":"number","description":"MaxStringLen is the maximum number of bytes read from a string","default":64},"maxArrayValues":{"type":"number","description":"MaxArrayValues is the maximum number of elements read from an array, a slice or a map","default":64},"maxStructFields":{"type":"number","description":"MaxStructFields is the maximum number of fields read from a struct, -1 will read all fields","default":-1}},"description":"LoadConfig describes to delve, how to load values from target's memory. Ignored by 'dlv-dap'.","default":{"followPointers":true,"maxVariableRecurse":1,"maxStringLen":64,"maxArrayValues":64,"maxStructFields":-1}},"apiVersion":{"type":"number","enum":[1,2],"description":"Delve Api Version to use. Default value is 2. This applies only when using the 'legacy' debug adapter.","default":2},"showGlobalVariables":{"type":"boolean","description":"Boolean value to indicate whether global package variables should be shown in the variables pane or not.","default":false},"showRegisters":{"type":"boolean","default":false,"description":"Boolean value to indicate whether register variables should be shown in the variables pane or not."},"hideSystemGoroutines":{"type":"boolean","default":false,"description":"Boolean value to indicate whether system goroutines should be hidden from call stack view."},"showLog":{"type":"boolean","description":"Show log output from the delve debugger. Maps to dlv's `--log` flag.","default":false},"logOutput":{"type":"string","enum":["debugger","gdbwire","lldbout","debuglineerr","rpc","dap"],"description":"Comma separated list of components that should produce debug output. Maps to dlv's `--log-output` flag. Check `dlv log` for details.","default":"debugger"},"debugAdapter":{"type":"string","enum":["legacy","dlv-dap"],"description":"Select which debug adapter to use by default. This is also used for choosing which debug adapter to use when no launch.json is present and with codelenses.","default":"dlv-dap"},"dlvFlags":{"type":"array","description":"Extra flags for `dlv`. See `dlv help` for the full list of supported. Flags such as `--log-output`, `--log`, `--log-dest`, `--api-version`, `--output`, `--backend` already have corresponding properties in the debug configuration, and flags such as `--listen` and `--headless` are used internally. If they are specified in `dlvFlags`, they may be ignored or cause an error.","items":{"type":"string"},"default":[]},"substitutePath":{"type":"array","items":{"type":"object","properties":{"from":{"type":"string","description":"The absolute local path to be replaced when passing paths to the debugger","default":""},"to":{"type":"string","description":"The absolute remote path to be replaced when passing paths back to the client","default":""}}},"description":"An array of mappings from a local path to the remote path that is used by the debuggee. The debug adapter will replace the local path with the remote path in all of the calls. Overriden by `remotePath` (in attach request).","default":[]}},"default":{},"description":"Delve settings that applies to all debugging sessions. Debug configuration in the launch.json file will override these values.","scope":"resource"},"go.alternateTools":{"type":"object","default":{},"description":"Alternate tools or alternate paths for the same tools used by the Go extension. Provide either absolute path or the name of the binary in GOPATH/bin, GOROOT/bin or PATH. Useful when you want to use wrapper script for the Go tools.","scope":"resource","properties":{"go":{"type":"string","default":"go","description":"Alternate tool to use instead of the go binary or alternate path to use for the go binary."},"gopls":{"type":"string","default":"gopls","description":"Alternate tool to use instead of the gopls binary or alternate path to use for the gopls binary."},"dlv":{"type":"string","default":"dlv","description":"Alternate tool to use instead of the dlv binary or alternate path to use for the dlv binary."},"customFormatter":{"type":"string","default":"","markdownDescription":"Custom formatter to use instead of the language server. This should be used with the `custom` option in `#go.formatTool#`."}},"additionalProperties":true},"go.terminal.activateEnvironment":{"default":true,"description":"Apply the Go & PATH environment variables used by the extension to all integrated terminals.","scope":"resource","type":"boolean"},"gopls":{"type":"object","markdownDescription":"Configure the default Go language server ('gopls'). In most cases, configuring this section is unnecessary. See [the documentation](https://github.com/golang/tools/blob/master/gopls/doc/settings.md) for all available settings.","scope":"resource","properties":{"build.allowImplicitNetworkAccess":{"type":"boolean","markdownDescription":"(Experimental) allowImplicitNetworkAccess disables GOPROXY=off, allowing implicit module\ndownloads rather than requiring user action. This option will eventually\nbe removed.\n","default":false,"scope":"resource"},"build.allowModfileModifications":{"type":"boolean","markdownDescription":"(Experimental) allowModfileModifications disables -mod=readonly, allowing imports from\nout-of-scope modules. This option will eventually be removed.\n","default":false,"scope":"resource"},"build.buildFlags":{"type":"array","markdownDescription":"buildFlags is the set of flags passed on to the build system when invoked.\nIt is applied to queries like `go list`, which is used when discovering files.\nThe most common use is to set `-tags`.\n\nIf unspecified, values of `go.buildFlags, go.buildTags` will be propagated.\n","default":[],"scope":"resource"},"build.directoryFilters":{"type":"array","markdownDescription":"directoryFilters can be used to exclude unwanted directories from the\nworkspace. By default, all directories are included. Filters are an\noperator, `+` to include and `-` to exclude, followed by a path prefix\nrelative to the workspace folder. They are evaluated in order, and\nthe last filter that applies to a path controls whether it is included.\nThe path prefix can be empty, so an initial `-` excludes everything.\n\nDirectoryFilters also supports the `**` operator to match 0 or more directories.\n\nExamples:\n\nExclude node_modules at current depth: `-node_modules`\n\nExclude node_modules at any depth: `-**/node_modules`\n\nInclude only project_a: `-` (exclude everything), `+project_a`\n\nInclude only project_a, but not node_modules inside it: `-`, `+project_a`, `-project_a/node_modules`\n","default":["-**/node_modules"],"scope":"resource"},"build.env":{"type":"object","markdownDescription":"env adds environment variables to external commands run by `gopls`, most notably `go list`.\n","scope":"resource"},"build.expandWorkspaceToModule":{"type":"boolean","markdownDescription":"(Experimental) expandWorkspaceToModule instructs `gopls` to adjust the scope of the\nworkspace to find the best available module root. `gopls` first looks for\na go.mod file in any parent directory of the workspace folder, expanding\nthe scope to that directory if it exists. If no viable parent directory is\nfound, gopls will check if there is exactly one child directory containing\na go.mod file, narrowing the scope to that directory if it exists.\n","default":true,"scope":"resource"},"build.experimentalPackageCacheKey":{"type":"boolean","markdownDescription":"(Experimental) experimentalPackageCacheKey controls whether to use a coarser cache key\nfor package type information to increase cache hits. This setting removes\nthe user's environment, build flags, and working directory from the cache\nkey, which should be a safe change as all relevant inputs into the type\nchecking pass are already hashed into the key. This is temporarily guarded\nby an experiment because caching behavior is subtle and difficult to\ncomprehensively test.\n","default":true,"scope":"resource"},"build.experimentalWorkspaceModule":{"type":"boolean","markdownDescription":"(Experimental) experimentalWorkspaceModule opts a user into the experimental support\nfor multi-module workspaces.\n\nDeprecated: this feature is deprecated and will be removed in a future\nversion of gopls (https://go.dev/issue/55331).\n","default":false,"scope":"resource"},"build.memoryMode":{"type":"string","markdownDescription":"(Experimental) memoryMode controls the tradeoff `gopls` makes between memory usage and\ncorrectness.\n\nValues other than `Normal` are untested and may break in surprising ways.\n","enum":["DegradeClosed","Normal"],"markdownEnumDescriptions":["`\"DegradeClosed\"`: In DegradeClosed mode, `gopls` will collect less information about\npackages without open files. As a result, features like Find\nReferences and Rename will miss results in such packages.\n",""],"default":"Normal","scope":"resource"},"build.standaloneTags":{"type":"array","markdownDescription":"standaloneTags specifies a set of build constraints that identify\nindividual Go source files that make up the entire main package of an\nexecutable.\n\nA common example of standalone main files is the convention of using the\ndirective `//go:build ignore` to denote files that are not intended to be\nincluded in any package, for example because they are invoked directly by\nthe developer using `go run`.\n\nGopls considers a file to be a standalone main file if and only if it has\npackage name \"main\" and has a build directive of the exact form\n\"//go:build tag\" or \"// +build tag\", where tag is among the list of tags\nconfigured by this setting. Notably, if the build constraint is more\ncomplicated than a simple tag (such as the composite constraint\n`//go:build tag && go1.18`), the file is not considered to be a standalone\nmain file.\n\nThis setting is only supported when gopls is built with Go 1.16 or later.\n","default":["ignore"],"scope":"resource"},"build.templateExtensions":{"type":"array","markdownDescription":"templateExtensions gives the extensions of file names that are treateed\nas template files. (The extension\nis the part of the file name after the final dot.)\n","default":[],"scope":"resource"},"formatting.gofumpt":{"type":"boolean","markdownDescription":"gofumpt indicates if we should run gofumpt formatting.\n","default":false,"scope":"resource"},"formatting.local":{"type":"string","markdownDescription":"local is the equivalent of the `goimports -local` flag, which puts\nimports beginning with this string after third-party packages. It should\nbe the prefix of the import path whose imports should be grouped\nseparately.\n","default":"","scope":"resource"},"ui.codelenses":{"type":"object","markdownDescription":"codelenses overrides the enabled/disabled state of code lenses. See the\n\"Code Lenses\" section of the\n[Settings page](https://github.com/golang/tools/blob/master/gopls/doc/settings.md#code-lenses)\nfor the list of supported lenses.\n\nExample Usage:\n\n```json5\n\"gopls\": {\n...\n  \"codelenses\": {\n    \"generate\": false,  // Don't show the `go generate` lens.\n    \"gc_details\": true  // Show a code lens toggling the display of gc's choices.\n  }\n...\n}\n```\n","scope":"resource","properties":{"gc_details":{"type":"boolean","markdownDescription":"Toggle the calculation of gc annotations.","default":false},"generate":{"type":"boolean","markdownDescription":"Runs `go generate` for a given directory.","default":true},"regenerate_cgo":{"type":"boolean","markdownDescription":"Regenerates cgo definitions.","default":true},"run_govulncheck":{"type":"boolean","markdownDescription":"Run vulnerability check (`govulncheck`).","default":false},"test":{"type":"boolean","markdownDescription":"Runs `go test` for a specific set of test or benchmark functions.","default":false},"tidy":{"type":"boolean","markdownDescription":"Runs `go mod tidy` for a module.","default":true},"upgrade_dependency":{"type":"boolean","markdownDescription":"Upgrades a dependency in the go.mod file for a module.","default":true},"vendor":{"type":"boolean","markdownDescription":"Runs `go mod vendor` for a module.","default":true}}},"ui.completion.completionBudget":{"type":"string","markdownDescription":"(For Debugging) completionBudget is the soft latency goal for completion requests. Most\nrequests finish in a couple milliseconds, but in some cases deep\ncompletions can take much longer. As we use up our budget we\ndynamically reduce the search scope to ensure we return timely\nresults. Zero means unlimited.\n","default":"100ms","scope":"resource"},"ui.completion.experimentalPostfixCompletions":{"type":"boolean","markdownDescription":"(Experimental) experimentalPostfixCompletions enables artificial method snippets\nsuch as \"someSlice.sort!\".\n","default":true,"scope":"resource"},"ui.completion.matcher":{"type":"string","markdownDescription":"(Advanced) matcher sets the algorithm that is used when calculating completion\ncandidates.\n","enum":["CaseInsensitive","CaseSensitive","Fuzzy"],"markdownEnumDescriptions":["","",""],"default":"Fuzzy","scope":"resource"},"ui.completion.usePlaceholders":{"type":"boolean","markdownDescription":"placeholders enables placeholders for function parameters or struct\nfields in completion responses.\n","default":false,"scope":"resource"},"ui.diagnostic.analyses":{"type":"object","markdownDescription":"analyses specify analyses that the user would like to enable or disable.\nA map of the names of analysis passes that should be enabled/disabled.\nA full list of analyzers that gopls uses can be found in\n[analyzers.md](https://github.com/golang/tools/blob/master/gopls/doc/analyzers.md).\n\nExample Usage:\n\n```json5\n...\n\"analyses\": {\n  \"unreachable\": false, // Disable the unreachable analyzer.\n  \"unusedparams\": true  // Enable the unusedparams analyzer.\n}\n...\n```\n","scope":"resource","properties":{"asmdecl":{"type":"boolean","markdownDescription":"report mismatches between assembly files and Go declarations","default":true},"assign":{"type":"boolean","markdownDescription":"check for useless assignments\n\nThis checker reports assignments of the form x = x or a[i] = a[i].\nThese are almost always useless, and even when they aren't they are\nusually a mistake.","default":true},"atomic":{"type":"boolean","markdownDescription":"check for common mistakes using the sync/atomic package\n\nThe atomic checker looks for assignment statements of the form:\n\n\tx = atomic.AddUint64(&x, 1)\n\nwhich are not atomic.","default":true},"atomicalign":{"type":"boolean","markdownDescription":"check for non-64-bits-aligned arguments to sync/atomic functions","default":true},"bools":{"type":"boolean","markdownDescription":"check for common mistakes involving boolean operators","default":true},"buildtag":{"type":"boolean","markdownDescription":"check that +build tags are well-formed and correctly located","default":true},"cgocall":{"type":"boolean","markdownDescription":"detect some violations of the cgo pointer passing rules\n\nCheck for invalid cgo pointer passing.\nThis looks for code that uses cgo to call C code passing values\nwhose types are almost always invalid according to the cgo pointer\nsharing rules.\nSpecifically, it warns about attempts to pass a Go chan, map, func,\nor slice to C, either directly, or via a pointer, array, or struct.","default":true},"composites":{"type":"boolean","markdownDescription":"check for unkeyed composite literals\n\nThis analyzer reports a diagnostic for composite literals of struct\ntypes imported from another package that do not use the field-keyed\nsyntax. Such literals are fragile because the addition of a new field\n(even if unexported) to the struct will cause compilation to fail.\n\nAs an example,\n\n\terr = &net.DNSConfigError{err}\n\nshould be replaced by:\n\n\terr = &net.DNSConfigError{Err: err}\n","default":true},"copylocks":{"type":"boolean","markdownDescription":"check for locks erroneously passed by value\n\nInadvertently copying a value containing a lock, such as sync.Mutex or\nsync.WaitGroup, may cause both copies to malfunction. Generally such\nvalues should be referred to through a pointer.","default":true},"deepequalerrors":{"type":"boolean","markdownDescription":"check for calls of reflect.DeepEqual on error values\n\nThe deepequalerrors checker looks for calls of the form:\n\n    reflect.DeepEqual(err1, err2)\n\nwhere err1 and err2 are errors. Using reflect.DeepEqual to compare\nerrors is discouraged.","default":true},"embed":{"type":"boolean","markdownDescription":"check for //go:embed directive import\n\nThis analyzer checks that the embed package is imported when source code contains //go:embed comment directives.\nThe embed package must be imported for //go:embed directives to function.import _ \"embed\".","default":true},"errorsas":{"type":"boolean","markdownDescription":"report passing non-pointer or non-error values to errors.As\n\nThe errorsas analysis reports calls to errors.As where the type\nof the second argument is not a pointer to a type implementing error.","default":true},"fieldalignment":{"type":"boolean","markdownDescription":"find structs that would use less memory if their fields were sorted\n\nThis analyzer find structs that can be rearranged to use less memory, and provides\na suggested edit with the most compact order.\n\nNote that there are two different diagnostics reported. One checks struct size,\nand the other reports \"pointer bytes\" used. Pointer bytes is how many bytes of the\nobject that the garbage collector has to potentially scan for pointers, for example:\n\n\tstruct { uint32; string }\n\nhave 16 pointer bytes because the garbage collector has to scan up through the string's\ninner pointer.\n\n\tstruct { string; *uint32 }\n\nhas 24 pointer bytes because it has to scan further through the *uint32.\n\n\tstruct { string; uint32 }\n\nhas 8 because it can stop immediately after the string pointer.\n\nBe aware that the most compact order is not always the most efficient.\nIn rare cases it may cause two variables each updated by its own goroutine\nto occupy the same CPU cache line, inducing a form of memory contention\nknown as \"false sharing\" that slows down both goroutines.\n","default":false},"fillreturns":{"type":"boolean","markdownDescription":"suggest fixes for errors due to an incorrect number of return values\n\nThis checker provides suggested fixes for type errors of the\ntype \"wrong number of return values (want %d, got %d)\". For example:\n\tfunc m() (int, string, *bool, error) {\n\t\treturn\n\t}\nwill turn into\n\tfunc m() (int, string, *bool, error) {\n\t\treturn 0, \"\", nil, nil\n\t}\n\nThis functionality is similar to https://github.com/sqs/goreturns.\n","default":true},"fillstruct":{"type":"boolean","markdownDescription":"note incomplete struct initializations\n\nThis analyzer provides diagnostics for any struct literals that do not have\nany fields initialized. Because the suggested fix for this analysis is\nexpensive to compute, callers should compute it separately, using the\nSuggestedFix function below.\n","default":true},"httpresponse":{"type":"boolean","markdownDescription":"check for mistakes using HTTP responses\n\nA common mistake when using the net/http package is to defer a function\ncall to close the http.Response Body before checking the error that\ndetermines whether the response is valid:\n\n\tresp, err := http.Head(url)\n\tdefer resp.Body.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\t// (defer statement belongs here)\n\nThis checker helps uncover latent nil dereference bugs by reporting a\ndiagnostic for such mistakes.","default":true},"ifaceassert":{"type":"boolean","markdownDescription":"detect impossible interface-to-interface type assertions\n\nThis checker flags type assertions v.(T) and corresponding type-switch cases\nin which the static type V of v is an interface that cannot possibly implement\nthe target interface T. This occurs when V and T contain methods with the same\nname but different signatures. Example:\n\n\tvar v interface {\n\t\tRead()\n\t}\n\t_ = v.(io.Reader)\n\nThe Read method in v has a different signature than the Read method in\nio.Reader, so this assertion cannot succeed.\n","default":true},"infertypeargs":{"type":"boolean","markdownDescription":"check for unnecessary type arguments in call expressions\n\nExplicit type arguments may be omitted from call expressions if they can be\ninferred from function arguments, or from other type arguments:\n\n\tfunc f[T any](T) {}\n\t\n\tfunc _() {\n\t\tf[string](\"foo\") // string could be inferred\n\t}\n","default":true},"loopclosure":{"type":"boolean","markdownDescription":"check references to loop variables from within nested functions\n\nThis analyzer reports places where a function literal references the\niteration variable of an enclosing loop, and the loop calls the function\nin such a way (e.g. with go or defer) that it may outlive the loop\niteration and possibly observe the wrong value of the variable.\n\nIn this example, all the deferred functions run after the loop has\ncompleted, so all observe the final value of v.\n\n    for _, v := range list {\n        defer func() {\n            use(v) // incorrect\n        }()\n    }\n\nOne fix is to create a new variable for each iteration of the loop:\n\n    for _, v := range list {\n        v := v // new var per iteration\n        defer func() {\n            use(v) // ok\n        }()\n    }\n\nThe next example uses a go statement and has a similar problem.\nIn addition, it has a data race because the loop updates v\nconcurrent with the goroutines accessing it.\n\n    for _, v := range elem {\n        go func() {\n            use(v)  // incorrect, and a data race\n        }()\n    }\n\nA fix is the same as before. The checker also reports problems\nin goroutines started by golang.org/x/sync/errgroup.Group.\nA hard-to-spot variant of this form is common in parallel tests:\n\n    func Test(t *testing.T) {\n        for _, test := range tests {\n            t.Run(test.name, func(t *testing.T) {\n                t.Parallel()\n                use(test) // incorrect, and a data race\n            })\n        }\n    }\n\nThe t.Parallel() call causes the rest of the function to execute\nconcurrent with the loop.\n\nThe analyzer reports references only in the last statement,\nas it is not deep enough to understand the effects of subsequent\nstatements that might render the reference benign.\n(\"Last statement\" is defined recursively in compound\nstatements such as if, switch, and select.)\n\nSee: https://golang.org/doc/go_faq.html#closures_and_goroutines","default":true},"lostcancel":{"type":"boolean","markdownDescription":"check cancel func returned by context.WithCancel is called\n\nThe cancellation function returned by context.WithCancel, WithTimeout,\nand WithDeadline must be called or the new context will remain live\nuntil its parent context is cancelled.\n(The background context is never cancelled.)","default":true},"nilfunc":{"type":"boolean","markdownDescription":"check for useless comparisons between functions and nil\n\nA useless comparison is one like f == nil as opposed to f() == nil.","default":true},"nilness":{"type":"boolean","markdownDescription":"check for redundant or impossible nil comparisons\n\nThe nilness checker inspects the control-flow graph of each function in\na package and reports nil pointer dereferences, degenerate nil\npointers, and panics with nil values. A degenerate comparison is of the form\nx==nil or x!=nil where x is statically known to be nil or non-nil. These are\noften a mistake, especially in control flow related to errors. Panics with nil\nvalues are checked because they are not detectable by\n\n\tif r := recover(); r != nil {\n\nThis check reports conditions such as:\n\n\tif f == nil { // impossible condition (f is a function)\n\t}\n\nand:\n\n\tp := &v\n\t...\n\tif p != nil { // tautological condition\n\t}\n\nand:\n\n\tif p == nil {\n\t\tprint(*p) // nil dereference\n\t}\n\nand:\n\n\tif p == nil {\n\t\tpanic(p)\n\t}\n","default":false},"nonewvars":{"type":"boolean","markdownDescription":"suggested fixes for \"no new vars on left side of :=\"\n\nThis checker provides suggested fixes for type errors of the\ntype \"no new vars on left side of :=\". For example:\n\tz := 1\n\tz := 2\nwill turn into\n\tz := 1\n\tz = 2\n","default":true},"noresultvalues":{"type":"boolean","markdownDescription":"suggested fixes for unexpected return values\n\nThis checker provides suggested fixes for type errors of the\ntype \"no result values expected\" or \"too many return values\".\nFor example:\n\tfunc z() { return nil }\nwill turn into\n\tfunc z() { return }\n","default":true},"printf":{"type":"boolean","markdownDescription":"check consistency of Printf format strings and arguments\n\nThe check applies to known functions (for example, those in package fmt)\nas well as any detected wrappers of known functions.\n\nA function that wants to avail itself of printf checking but is not\nfound by this analyzer's heuristics (for example, due to use of\ndynamic calls) can insert a bogus call:\n\n\tif false {\n\t\t_ = fmt.Sprintf(format, args...) // enable printf checking\n\t}\n\nThe -funcs flag specifies a comma-separated list of names of additional\nknown formatting functions or methods. If the name contains a period,\nit must denote a specific function using one of the following forms:\n\n\tdir/pkg.Function\n\tdir/pkg.Type.Method\n\t(*dir/pkg.Type).Method\n\nOtherwise the name is interpreted as a case-insensitive unqualified\nidentifier such as \"errorf\". Either way, if a listed name ends in f, the\nfunction is assumed to be Printf-like, taking a format string before the\nargument list. Otherwise it is assumed to be Print-like, taking a list\nof arguments with no format string.\n","default":true},"shadow":{"type":"boolean","markdownDescription":"check for possible unintended shadowing of variables\n\nThis analyzer check for shadowed variables.\nA shadowed variable is a variable declared in an inner scope\nwith the same name and type as a variable in an outer scope,\nand where the outer variable is mentioned after the inner one\nis declared.\n\n(This definition can be refined; the module generates too many\nfalse positives and is not yet enabled by default.)\n\nFor example:\n\n\tfunc BadRead(f *os.File, buf []byte) error {\n\t\tvar err error\n\t\tfor {\n\t\t\tn, err := f.Read(buf) // shadows the function variable 'err'\n\t\t\tif err != nil {\n\t\t\t\tbreak // causes return of wrong value\n\t\t\t}\n\t\t\tfoo(buf)\n\t\t}\n\t\treturn err\n\t}\n","default":false},"shift":{"type":"boolean","markdownDescription":"check for shifts that equal or exceed the width of the integer","default":true},"simplifycompositelit":{"type":"boolean","markdownDescription":"check for composite literal simplifications\n\nAn array, slice, or map composite literal of the form:\n\t[]T{T{}, T{}}\nwill be simplified to:\n\t[]T{{}, {}}\n\nThis is one of the simplifications that \"gofmt -s\" applies.","default":true},"simplifyrange":{"type":"boolean","markdownDescription":"check for range statement simplifications\n\nA range of the form:\n\tfor x, _ = range v {...}\nwill be simplified to:\n\tfor x = range v {...}\n\nA range of the form:\n\tfor _ = range v {...}\nwill be simplified to:\n\tfor range v {...}\n\nThis is one of the simplifications that \"gofmt -s\" applies.","default":true},"simplifyslice":{"type":"boolean","markdownDescription":"check for slice simplifications\n\nA slice expression of the form:\n\ts[a:len(s)]\nwill be simplified to:\n\ts[a:]\n\nThis is one of the simplifications that \"gofmt -s\" applies.","default":true},"sortslice":{"type":"boolean","markdownDescription":"check the argument type of sort.Slice\n\nsort.Slice requires an argument of a slice type. Check that\nthe interface{} value passed to sort.Slice is actually a slice.","default":true},"stdmethods":{"type":"boolean","markdownDescription":"check signature of methods of well-known interfaces\n\nSometimes a type may be intended to satisfy an interface but may fail to\ndo so because of a mistake in its method signature.\nFor example, the result of this WriteTo method should be (int64, error),\nnot error, to satisfy io.WriterTo:\n\n\ttype myWriterTo struct{...}\n        func (myWriterTo) WriteTo(w io.Writer) error { ... }\n\nThis check ensures that each method whose name matches one of several\nwell-known interface methods from the standard library has the correct\nsignature for that interface.\n\nChecked method names include:\n\tFormat GobEncode GobDecode MarshalJSON MarshalXML\n\tPeek ReadByte ReadFrom ReadRune Scan Seek\n\tUnmarshalJSON UnreadByte UnreadRune WriteByte\n\tWriteTo\n","default":true},"stringintconv":{"type":"boolean","markdownDescription":"check for string(int) conversions\n\nThis checker flags conversions of the form string(x) where x is an integer\n(but not byte or rune) type. Such conversions are discouraged because they\nreturn the UTF-8 representation of the Unicode code point x, and not a decimal\nstring representation of x as one might expect. Furthermore, if x denotes an\ninvalid code point, the conversion cannot be statically rejected.\n\nFor conversions that intend on using the code point, consider replacing them\nwith string(rune(x)). Otherwise, strconv.Itoa and its equivalents return the\nstring representation of the value in the desired base.\n","default":true},"structtag":{"type":"boolean","markdownDescription":"check that struct field tags conform to reflect.StructTag.Get\n\nAlso report certain struct tags (json, xml) used with unexported fields.","default":true},"stubmethods":{"type":"boolean","markdownDescription":"stub methods analyzer\n\nThis analyzer generates method stubs for concrete types\nin order to implement a target interface","default":true},"testinggoroutine":{"type":"boolean","markdownDescription":"report calls to (*testing.T).Fatal from goroutines started by a test.\n\nFunctions that abruptly terminate a test, such as the Fatal, Fatalf, FailNow, and\nSkip{,f,Now} methods of *testing.T, must be called from the test goroutine itself.\nThis checker detects calls to these functions that occur within a goroutine\nstarted by the test. For example:\n\nfunc TestFoo(t *testing.T) {\n    go func() {\n        t.Fatal(\"oops\") // error: (*T).Fatal called from non-test goroutine\n    }()\n}\n","default":true},"tests":{"type":"boolean","markdownDescription":"check for common mistaken usages of tests and examples\n\nThe tests checker walks Test, Benchmark and Example functions checking\nmalformed names, wrong signatures and examples documenting non-existent\nidentifiers.\n\nPlease see the documentation for package testing in golang.org/pkg/testing\nfor the conventions that are enforced for Tests, Benchmarks, and Examples.","default":true},"timeformat":{"type":"boolean","markdownDescription":"check for calls of (time.Time).Format or time.Parse with 2006-02-01\n\nThe timeformat checker looks for time formats with the 2006-02-01 (yyyy-dd-mm)\nformat. Internationally, \"yyyy-dd-mm\" does not occur in common calendar date\nstandards, and so it is more likely that 2006-01-02 (yyyy-mm-dd) was intended.\n","default":true},"undeclaredname":{"type":"boolean","markdownDescription":"suggested fixes for \"undeclared name: <>\"\n\nThis checker provides suggested fixes for type errors of the\ntype \"undeclared name: <>\". It will either insert a new statement,\nsuch as:\n\n\"<> := \"\n\nor a new function declaration, such as:\n\nfunc <>(inferred parameters) {\n\tpanic(\"implement me!\")\n}\n","default":true},"unmarshal":{"type":"boolean","markdownDescription":"report passing non-pointer or non-interface values to unmarshal\n\nThe unmarshal analysis reports calls to functions such as json.Unmarshal\nin which the argument type is not a pointer or an interface.","default":true},"unreachable":{"type":"boolean","markdownDescription":"check for unreachable code\n\nThe unreachable analyzer finds statements that execution can never reach\nbecause they are preceded by an return statement, a call to panic, an\ninfinite loop, or similar constructs.","default":true},"unsafeptr":{"type":"boolean","markdownDescription":"check for invalid conversions of uintptr to unsafe.Pointer\n\nThe unsafeptr analyzer reports likely incorrect uses of unsafe.Pointer\nto convert integers to pointers. A conversion from uintptr to\nunsafe.Pointer is invalid if it implies that there is a uintptr-typed\nword in memory that holds a pointer value, because that word will be\ninvisible to stack copying and to the garbage collector.","default":true},"unusedparams":{"type":"boolean","markdownDescription":"check for unused parameters of functions\n\nThe unusedparams analyzer checks functions to see if there are\nany parameters that are not being used.\n\nTo reduce false positives it ignores:\n- methods\n- parameters that do not have a name or are underscored\n- functions in test files\n- functions with empty bodies or those with just a return stmt","default":false},"unusedresult":{"type":"boolean","markdownDescription":"check for unused results of calls to some functions\n\nSome functions like fmt.Errorf return a result and have no side effects,\nso it is always a mistake to discard the result. This analyzer reports\ncalls to certain functions in which the result of the call is ignored.\n\nThe set of functions may be controlled using flags.","default":true},"unusedvariable":{"type":"boolean","markdownDescription":"check for unused variables\n\nThe unusedvariable analyzer suggests fixes for unused variables errors.\n","default":false},"unusedwrite":{"type":"boolean","markdownDescription":"checks for unused writes\n\nThe analyzer reports instances of writes to struct fields and\narrays that are never read. Specifically, when a struct object\nor an array is copied, its elements are copied implicitly by\nthe compiler, and any element write to this copy does nothing\nwith the original object.\n\nFor example:\n\n\ttype T struct { x int }\n\tfunc f(input []T) {\n\t\tfor i, v := range input {  // v is a copy\n\t\t\tv.x = i  // unused write to field x\n\t\t}\n\t}\n\nAnother example is about non-pointer receiver:\n\n\ttype T struct { x int }\n\tfunc (t T) f() {  // t is a copy\n\t\tt.x = i  // unused write to field x\n\t}\n","default":false},"useany":{"type":"boolean","markdownDescription":"check for constraints that could be simplified to \"any\"","default":false}}},"ui.diagnostic.annotations":{"type":"object","markdownDescription":"(Experimental) annotations specifies the various kinds of optimization diagnostics\nthat should be reported by the gc_details command.\n","scope":"resource","properties":{"bounds":{"type":"boolean","markdownDescription":"`\"bounds\"` controls bounds checking diagnostics.\n","default":true},"escape":{"type":"boolean","markdownDescription":"`\"escape\"` controls diagnostics about escape choices.\n","default":true},"inline":{"type":"boolean","markdownDescription":"`\"inline\"` controls diagnostics about inlining choices.\n","default":true},"nil":{"type":"boolean","markdownDescription":"`\"nil\"` controls nil checks.\n","default":true}}},"ui.diagnostic.diagnosticsDelay":{"type":"string","markdownDescription":"(Advanced) diagnosticsDelay controls the amount of time that gopls waits\nafter the most recent file modification before computing deep diagnostics.\nSimple diagnostics (parsing and type-checking) are always run immediately\non recently modified packages.\n\nThis option must be set to a valid duration string, for example `\"250ms\"`.\n","default":"250ms","scope":"resource"},"ui.diagnostic.experimentalWatchedFileDelay":{"type":"string","markdownDescription":"(Experimental) experimentalWatchedFileDelay controls the amount of time that gopls waits\nfor additional workspace/didChangeWatchedFiles notifications to arrive,\nbefore processing all such notifications in a single batch. This is\nintended for use by LSP clients that don't support their own batching of\nfile system notifications.\n\nThis option must be set to a valid duration string, for example `\"100ms\"`.\n\nDeprecated: this setting is deprecated and will be removed in a future\nversion of gopls (https://go.dev/issue/55332)\n","default":"0s","scope":"resource"},"ui.diagnostic.staticcheck":{"type":"boolean","markdownDescription":"(Experimental) staticcheck enables additional analyses from staticcheck.io.\nThese analyses are documented on\n[Staticcheck's website](https://staticcheck.io/docs/checks/).\n","default":false,"scope":"resource"},"ui.documentation.hoverKind":{"type":"string","markdownDescription":"hoverKind controls the information that appears in the hover text.\nSingleLine and Structured are intended for use only by authors of editor plugins.\n","enum":["FullDocumentation","NoDocumentation","SingleLine","Structured","SynopsisDocumentation"],"markdownEnumDescriptions":["","","","`\"Structured\"` is an experimental setting that returns a structured hover format.\nThis format separates the signature from the documentation, so that the client\ncan do more manipulation of these fields.\n\nThis should only be used by clients that support this behavior.\n",""],"default":"FullDocumentation","scope":"resource"},"ui.documentation.linkTarget":{"type":"string","markdownDescription":"linkTarget controls where documentation links go.\nIt might be one of:\n\n* `\"godoc.org\"`\n* `\"pkg.go.dev\"`\n\nIf company chooses to use its own `godoc.org`, its address can be used as well.\n\nModules matching the GOPRIVATE environment variable will not have\ndocumentation links in hover.\n","default":"pkg.go.dev","scope":"resource"},"ui.documentation.linksInHover":{"type":"boolean","markdownDescription":"linksInHover toggles the presence of links to documentation in hover.\n","default":true,"scope":"resource"},"ui.navigation.importShortcut":{"type":"string","markdownDescription":"importShortcut specifies whether import statements should link to\ndocumentation or go to definitions.\n","enum":["Both","Definition","Link"],"markdownEnumDescriptions":["","",""],"default":"Both","scope":"resource"},"ui.navigation.symbolMatcher":{"type":"string","markdownDescription":"(Advanced) symbolMatcher sets the algorithm that is used when finding workspace symbols.\n","enum":["CaseInsensitive","CaseSensitive","FastFuzzy","Fuzzy"],"markdownEnumDescriptions":["","","",""],"default":"FastFuzzy","scope":"resource"},"ui.navigation.symbolStyle":{"type":"string","markdownDescription":"(Advanced) symbolStyle controls how symbols are qualified in symbol responses.\n\nExample Usage:\n\n```json5\n\"gopls\": {\n...\n  \"symbolStyle\": \"Dynamic\",\n...\n}\n```\n","enum":["Dynamic","Full","Package"],"markdownEnumDescriptions":["`\"Dynamic\"` uses whichever qualifier results in the highest scoring\nmatch for the given symbol query. Here a \"qualifier\" is any \"/\" or \".\"\ndelimited suffix of the fully qualified symbol. i.e. \"to/pkg.Foo.Field\" or\njust \"Foo.Field\".\n","`\"Full\"` is fully qualified symbols, i.e.\n\"path/to/pkg.Foo.Field\".\n","`\"Package\"` is package qualified symbols i.e.\n\"pkg.Foo.Field\".\n"],"default":"Dynamic","scope":"resource"},"ui.noSemanticNumber":{"type":"boolean","markdownDescription":"(Experimental) noSemanticNumber  turns off the sending of the semantic token 'number'\n","default":false,"scope":"resource"},"ui.noSemanticString":{"type":"boolean","markdownDescription":"(Experimental) noSemanticString turns off the sending of the semantic token 'string'\n","default":false,"scope":"resource"},"ui.semanticTokens":{"type":"boolean","markdownDescription":"(Experimental) semanticTokens controls whether the LSP server will send\nsemantic tokens to the client.\n","default":false,"scope":"resource"},"verboseOutput":{"type":"boolean","markdownDescription":"(For Debugging) verboseOutput enables additional debug logging.\n","default":false,"scope":"resource"}}},"go.diagnostic.vulncheck":{"type":"string","markdownDescription":"(Experimental) vulncheck enables vulnerability scanning.\n","enum":["Imports","Off"],"markdownEnumDescriptions":["`\"Imports\"`: In Imports mode, `gopls` will report vulnerabilities that affect packages\ndirectly and indirectly used by the analyzed main module.\n","`\"Off\"`: Disable vulnerability analysis.\n"],"default":"Off","scope":"resource"},"go.inlayHints.assignVariableTypes":{"type":"boolean","markdownDescription":"Enable/disable inlay hints for variable types in assign statements:\n```go\n\ti/* int*/, j/* int*/ := 0, len(r)-1\n```","default":false},"go.inlayHints.compositeLiteralFields":{"type":"boolean","markdownDescription":"Enable/disable inlay hints for composite literal field names:\n```go\n\t{/*in: */\"Hello, world\", /*want: */\"dlrow ,olleH\"}\n```","default":false},"go.inlayHints.compositeLiteralTypes":{"type":"boolean","markdownDescription":"Enable/disable inlay hints for composite literal types:\n```go\n\tfor _, c := range []struct {\n\t\tin, want string\n\t}{\n\t\t/*struct{ in string; want string }*/{\"Hello, world\", \"dlrow ,olleH\"},\n\t}\n```","default":false},"go.inlayHints.constantValues":{"type":"boolean","markdownDescription":"Enable/disable inlay hints for constant values:\n```go\n\tconst (\n\t\tKindNone   Kind = iota/* = 0*/\n\t\tKindPrint/*  = 1*/\n\t\tKindPrintf/* = 2*/\n\t\tKindErrorf/* = 3*/\n\t)\n```","default":false},"go.inlayHints.functionTypeParameters":{"type":"boolean","markdownDescription":"Enable/disable inlay hints for implicit type parameters on generic functions:\n```go\n\tmyFoo/*[int, string]*/(1, \"hello\")\n```","default":false},"go.inlayHints.parameterNames":{"type":"boolean","markdownDescription":"Enable/disable inlay hints for parameter names:\n```go\n\tparseInt(/* str: */ \"123\", /* radix: */ 8)\n```","default":false},"go.inlayHints.rangeVariableTypes":{"type":"boolean","markdownDescription":"Enable/disable inlay hints for variable types in range statements:\n```go\n\tfor k/* int*/, v/* string*/ := range []string{} {\n\t\tfmt.Println(k, v)\n\t}\n```","default":false}}},"menus":{"commandPalette":[{"command":"go.test.refresh","when":"false"},{"command":"go.test.showProfiles","when":"false"},{"command":"go.test.captureProfile","when":"false"},{"command":"go.test.deleteProfile","when":"false"},{"command":"go.test.showProfileFile","when":"false"},{"command":"go.explorer.refresh","when":"false"},{"command":"go.explorer.open","when":"false"}],"editor/context":[{"when":"editorTextFocus && config.go.editorContextMenuCommands.toggleTestFile && resourceLangId == go","command":"go.toggle.test.file","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.addTags && resourceLangId == go","command":"go.add.tags","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.removeTags && resourceLangId == go","command":"go.remove.tags","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.fillStruct && resourceLangId == go","command":"go.fill.struct","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testAtCursor && resourceLangId == go","command":"go.test.cursor","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.benchmarkAtCursor && resourceLangId == go","command":"go.benchmark.cursor","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.debugTestAtCursor && resourceLangId == go","command":"go.debug.cursor","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testFile && resourceLangId == go","command":"go.test.file","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testPackage && resourceLangId == go","command":"go.test.package","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.generateTestForFunction && resourceLangId == go","command":"go.test.generate.function","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.generateTestForFile && resourceLangId == go","command":"go.test.generate.file","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.generateTestForPackage && resourceLangId == go","command":"go.test.generate.package","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.addImport && resourceLangId == go","command":"go.import.add","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testCoverage && resourceLangId == go","command":"go.test.coverage","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.playground && resourceLangId == go","command":"go.playground","group":"Go group 1"},{"when":"editorTextFocus && resourceLangId == go","command":"go.show.commands","group":"Go group 2"}],"testing/item/context":[{"command":"go.test.refresh","when":"testId in go.tests","group":"inline"},{"command":"go.test.showProfiles","when":"testId in go.profiledTests","group":"profile"},{"command":"go.test.captureProfile","when":"testId in go.tests && testId =~ /\\?(test|benchmark)/","group":"profile"}],"view/title":[{"command":"go.explorer.refresh","when":"view == go.explorer","group":"navigation"}],"view/item/context":[{"command":"go.test.deleteProfile","when":"viewItem == go:test:file"},{"command":"go.explorer.open","when":"viewItem == go:explorer:envfile","group":"inline"},{"command":"go.workspace.editEnv","when":"viewItem =~ /(go:explorer:envtree|go:explorer:envitem)/ && workspaceFolderCount > 0","group":"inline"},{"command":"go.workspace.resetEnv","when":"viewItem =~ /go:explorer:env/ && workspaceFolderCount > 0"}]},"views":{"explorer":[{"id":"go.explorer","name":"go","icon":"media/go-logo-white.svg","when":"go.showExplorer"}],"test":[{"id":"go.test.profile","name":"Profiles","contextualTitle":"Go","icon":"$(graph)","when":"go.hasProfiles"}]}}},"location":{"$mid":1,"fsPath":"/home/ju/.vscode-oss/extensions/golang.go-0.37.0-universal","path":"/home/ju/.vscode-oss/extensions/golang.go-0.37.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","metadata":{"id":"d6f6cfea-4b6f-41f4-b571-6ad2ab7918da","publisherId":"dbf6ae0a-da75-4167-ac8b-75b4512f2153","publisherDisplayName":"golang","targetPlatform":"universal","isApplicationScoped":false,"updated":false,"isPreReleaseVersion":false,"installedTimestamp":1671739713988,"preRelease":false},"isValid":true,"validations":[]}]}